-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 04-Nov-2019 18:11:36
node kind2_times(x, y: real) returns (z: real) ;
var abs_x, abs_y, abs_z: real;
let
   abs_x = if x < 0.0 then -x else x ;
    abs_y = if y < 0.0 then -y else y ;
    abs_z = if z < 0.0 then -z else z ;
    -- Neutral.
    assert (z = y) = ((x = 1.0) or (y = 0.0)) ;
    assert (z = x) = ((y = 1.0) or (x = 0.0)) ;
    -- Absorbing.
    assert (z = 0.0) = ( (x = 0.0) or (y = 0.0) ) ;
    -- Sign.
    assert (z > 0.0) = (
      ( (x > 0.0) and (y > 0.0) ) or
      ( (x < 0.0) and (y < 0.0) )
    ) ;
    assert (z < 0.0) = (
      ( (x > 0.0) and (y < 0.0) ) or
      ( (x < 0.0) and (y > 0.0) )
    ) ;
    -- Loose proportionality.
    assert (abs_z >= abs_y) = ((abs_x >= 1.0) or (y = 0.0)) ;
    assert (abs_z >= abs_x) = ((abs_y >= 1.0) or (x = 0.0)) ;
    assert (abs_z <= abs_y) = ((abs_x <= 1.0) or (y = 0.0)) ;
    assert (abs_z <= abs_x) = ((abs_y <= 1.0) or (x = 0.0)) ;
    z = x * y ;
tel
node kind2_divide(num, den: real) returns (res: real) ;
var abs_num, abs_den, abs_res: real;
let
 abs_num = if num < 0.0 then -num else num ;
 abs_den = if den < 0.0 then -den else den ;
 abs_res = if res < 0.0 then -res else res ;
assert not (den = 0.0) ;
-- Neutral.
assert (res = num) = ((den = 1.0) or (num = 0.0)) ;
assert (res = - num) = ((den = - 1.0) or (num = 0.0)) ;
-- Absorbing.
assert (num = 0.0) = (res = 0.0) ;
-- Sign.
assert (res > 0.0) = (
  ( (num > 0.0) and (den > 0.0) ) or
  ( (num < 0.0) and (den < 0.0) )
) ;
assert (res < 0.0) = (
  ( (num > 0.0) and (den < 0.0) ) or
  ( (num < 0.0) and (den > 0.0) )
) ;
-- Loose proportionality.
assert (abs_res >= abs_num) = ((abs_den <= 1.0) or (num = 0.0)) ;
assert (abs_res <= abs_num) = ((abs_den >= 1.0) or (num = 0.0)) ;
-- Annulation.
assert (res = 1.0) = (num = den) ;
assert (res = - 1.0) = (num = - den) ;
  res = num / den ;
tel
node  int_to_int32(
	x : int;)
returns(
	y : int;);
let
	--Type-casting was disabled. See Tools -> CoCoSim -> Preferences -> NASA compiler preferences.
	y = x;
tel

node  _max_real(
	x : real; y : real;)
returns(
	z : real;);
let
	z = if (x > y) then
		x
	    else y;
tel

node  _min_real(
	x : real; y : real;)
returns(
	z : real;);
let
	z = if (x < y) then
		x
	    else y;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call/OTlore_call
*)
node  OTlore_call_23_000(
	OTlore_N_1 : int; OTlore_X_1 : bool; __time_step : real; __nb_step : int;)
returns(
	OTlore_Y_1 : bool;);
var 
	PRE_xxOTlore_6_1 : int; branch_1_IF_1 : int; branch_2_IF_1 : int; branch_3_IF_1 : int; xxOTlore_10_operator_1 : int;
	xxOTlore_3_rhs_1 : int; xxOTlore_5_operator_1 : int;
let
	assert (((- (2147483648)) <= OTlore_N_1) and (OTlore_N_1 <= 2147483647));
	PRE_xxOTlore_6_1 = (0 -> (pre (branch_3_IF_1)));
	branch_1_IF_1 = if ( (PRE_xxOTlore_6_1 < 0) ) then
		xxOTlore_3_rhs_1
	    else 1;
	branch_2_IF_1 = if ( (true -> (pre (false))) ) then
		xxOTlore_5_operator_1
	    else xxOTlore_10_operator_1;
	branch_3_IF_1 = if OTlore_X_1 then
		xxOTlore_3_rhs_1
	    else branch_2_IF_1;
	xxOTlore_10_operator_1 = int_to_int32(PRE_xxOTlore_6_1 + branch_1_IF_1);
	xxOTlore_3_rhs_1 = 0;
	xxOTlore_5_operator_1 = int_to_int32(1 * (- (1)));
	OTlore_Y_1 = ( ( (0 <= branch_3_IF_1) ) and ( (branch_3_IF_1 <= OTlore_N_1) ) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call/delay_call
*)
node  delay_call_70_000(
	delay_X_1 : bool; delay_R_1 : int; __time_step : real; __nb_step : int;)
returns(
	delay_Y_1 : bool;);
let
	assert (((- (2147483648)) <= delay_R_1) and (delay_R_1 <= 2147483647));
	delay_Y_1 = delay_X_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call
*)
node  OT_call_19_000(
	OT_L_1 : int; OT_R_1 : int; OT_X_1 : bool; __time_step : real; __nb_step : int;)
returns(
	OT_Y_1 : bool;);
var 
	OTlore_call_1 : bool; delay_call_1 : bool; xxOT_1_operator_1 : int;
let
	assert (((- (2147483648)) <= OT_L_1) and (OT_L_1 <= 2147483647));
	assert (((- (2147483648)) <= OT_R_1) and (OT_R_1 <= 2147483647));
	OTlore_call_1 = OTlore_call_23_000(xxOT_1_operator_1, delay_call_1, __time_step, __nb_step);
	delay_call_1 = delay_call_70_000(OT_X_1, OT_R_1, __time_step, __nb_step);
	xxOT_1_operator_1 = int_to_int32(OT_L_1 - OT_R_1);
	OT_Y_1 = OTlore_call_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call1/OTlore_call
*)
node  OTlore_call_91_000(
	OTlore_N_1 : int; OTlore_X_1 : bool; __time_step : real; __nb_step : int;)
returns(
	OTlore_Y_1 : bool;);
var 
	PRE_xxOTlore_6_1 : int; branch_1_IF_1 : int; branch_2_IF_1 : int; branch_3_IF_1 : int; xxOTlore_10_operator_1 : int;
	xxOTlore_3_rhs_1 : int; xxOTlore_5_operator_1 : int;
let
	assert (((- (2147483648)) <= OTlore_N_1) and (OTlore_N_1 <= 2147483647));
	PRE_xxOTlore_6_1 = (0 -> (pre (branch_3_IF_1)));
	branch_1_IF_1 = if ( (PRE_xxOTlore_6_1 < 0) ) then
		xxOTlore_3_rhs_1
	    else 1;
	branch_2_IF_1 = if ( (true -> (pre (false))) ) then
		xxOTlore_5_operator_1
	    else xxOTlore_10_operator_1;
	branch_3_IF_1 = if OTlore_X_1 then
		xxOTlore_3_rhs_1
	    else branch_2_IF_1;
	xxOTlore_10_operator_1 = int_to_int32(PRE_xxOTlore_6_1 + branch_1_IF_1);
	xxOTlore_3_rhs_1 = 0;
	xxOTlore_5_operator_1 = int_to_int32(1 * (- (1)));
	OTlore_Y_1 = ( ( (0 <= branch_3_IF_1) ) and ( (branch_3_IF_1 <= OTlore_N_1) ) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call1/delay_call
*)
node  delay_call_138_000(
	delay_X_1 : bool; delay_R_1 : int; __time_step : real; __nb_step : int;)
returns(
	delay_Y_1 : bool;);
let
	assert (((- (2147483648)) <= delay_R_1) and (delay_R_1 <= 2147483647));
	delay_Y_1 = delay_X_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call1
*)
node  OT_call1_87_000(
	OT_L_1 : int; OT_R_1 : int; OT_X_1 : bool; __time_step : real; __nb_step : int;)
returns(
	OT_Y_1 : bool;);
var 
	OTlore_call_1 : bool; delay_call_1 : bool; xxOT_1_operator_1 : int;
let
	assert (((- (2147483648)) <= OT_L_1) and (OT_L_1 <= 2147483647));
	assert (((- (2147483648)) <= OT_R_1) and (OT_R_1 <= 2147483647));
	OTlore_call_1 = OTlore_call_91_000(xxOT_1_operator_1, delay_call_1, __time_step, __nb_step);
	delay_call_1 = delay_call_138_000(OT_X_1, OT_R_1, __time_step, __nb_step);
	xxOT_1_operator_1 = int_to_int32(OT_L_1 - OT_R_1);
	OT_Y_1 = OTlore_call_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call11/OTlore_call
*)
node  OTlore_call_159_000(
	OTlore_N_1 : int; OTlore_X_1 : bool; __time_step : real; __nb_step : int;)
returns(
	OTlore_Y_1 : bool;);
var 
	PRE_xxOTlore_6_1 : int; branch_1_IF_1 : int; branch_2_IF_1 : int; branch_3_IF_1 : int; xxOTlore_10_operator_1 : int;
	xxOTlore_3_rhs_1 : int; xxOTlore_5_operator_1 : int;
let
	assert (((- (2147483648)) <= OTlore_N_1) and (OTlore_N_1 <= 2147483647));
	PRE_xxOTlore_6_1 = (0 -> (pre (branch_3_IF_1)));
	branch_1_IF_1 = if ( (PRE_xxOTlore_6_1 < 0) ) then
		xxOTlore_3_rhs_1
	    else 1;
	branch_2_IF_1 = if ( (true -> (pre (false))) ) then
		xxOTlore_5_operator_1
	    else xxOTlore_10_operator_1;
	branch_3_IF_1 = if OTlore_X_1 then
		xxOTlore_3_rhs_1
	    else branch_2_IF_1;
	xxOTlore_10_operator_1 = int_to_int32(PRE_xxOTlore_6_1 + branch_1_IF_1);
	xxOTlore_3_rhs_1 = 0;
	xxOTlore_5_operator_1 = int_to_int32(1 * (- (1)));
	OTlore_Y_1 = ( ( (0 <= branch_3_IF_1) ) and ( (branch_3_IF_1 <= OTlore_N_1) ) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call11/delay_call
*)
node  delay_call_206_000(
	delay_X_1 : bool; delay_R_1 : int; __time_step : real; __nb_step : int;)
returns(
	delay_Y_1 : bool;);
let
	assert (((- (2147483648)) <= delay_R_1) and (delay_R_1 <= 2147483647));
	delay_Y_1 = delay_X_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/OT_call11
*)
node  OT_call11_155_000(
	OT_L_1 : int; OT_R_1 : int; OT_X_1 : bool; __time_step : real; __nb_step : int;)
returns(
	OT_Y_1 : bool;);
var 
	OTlore_call_1 : bool; delay_call_1 : bool; xxOT_1_operator_1 : int;
let
	assert (((- (2147483648)) <= OT_L_1) and (OT_L_1 <= 2147483647));
	assert (((- (2147483648)) <= OT_R_1) and (OT_R_1 <= 2147483647));
	OTlore_call_1 = OTlore_call_159_000(xxOT_1_operator_1, delay_call_1, __time_step, __nb_step);
	delay_call_1 = delay_call_206_000(OT_X_1, OT_R_1, __time_step, __nb_step);
	xxOT_1_operator_1 = int_to_int32(OT_L_1 - OT_R_1);
	OT_Y_1 = OTlore_call_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/guarantee
*)
node  guarantee_230_000(
	In1_1 : bool; __time_step : real; __nb_step : int;)
returns(
	guarantee_1 : bool;);
let
	guarantee_1 = In1_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/guarantee1
*)
node  guarantee1_234_000(
	In1_1 : bool; __time_step : real; __nb_step : int;)
returns(
	guarantee_1 : bool;);
let
	guarantee_1 = In1_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/guarantee11
*)
node  guarantee11_238_000(
	In1_1 : bool; __time_step : real; __nb_step : int;)
returns(
	guarantee_1 : bool;);
let
	guarantee_1 = In1_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/guarantee111
*)
node  guarantee111_242_000(
	In1_1 : bool; __time_step : real; __nb_step : int;)
returns(
	guarantee_1 : bool;);
let
	guarantee_1 = In1_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/guarantee1111
*)
node  guarantee1111_246_000(
	In1_1 : bool; __time_step : real; __nb_step : int;)
returns(
	guarantee_1 : bool;);
let
	guarantee_1 = In1_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/spec189_operator
*)
node  spec189_operator_254_000(
	A_1 : bool; B_1 : bool; __time_step : real; __nb_step : int;)
returns(
	A_equal__equal__gt_B_1 : bool;);
let
	A_equal__equal__gt_B_1 = ( ( (not (A_1)) ) or B_1 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/spec207_operator
*)
node  spec207_operator_255_000(
	A_1 : bool; B_1 : bool; __time_step : real; __nb_step : int;)
returns(
	A_equal__equal__gt_B_1 : bool;);
let
	A_equal__equal__gt_B_1 = ( ( (not (A_1)) ) or B_1 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/spec225_operator
*)
node  spec225_operator_256_000(
	A_1 : bool; B_1 : bool; __time_step : real; __nb_step : int;)
returns(
	A_equal__equal__gt_B_1 : bool;);
let
	A_equal__equal__gt_B_1 = ( ( (not (A_1)) ) or B_1 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec/xxNNSpec_13_operator
*)
node  xxNNSpec_13_operator_261_000(
	A_1 : bool; B_1 : bool; __time_step : real; __nb_step : int;)
returns(
	A_equal__equal__gt_B_1 : bool;);
let
	A_equal__equal__gt_B_1 = ( ( (not (A_1)) ) or B_1 );
tel

node  From_newline_Workspace_10_000(
	__time_step : real;)
returns(
	From_newline_Workspace_1 : real;);
let
	From_newline_Workspace_1 = if ((__time_step >= 0.0) and (__time_step < 1.0)) then
		-0.881764670
	    else if ((__time_step >= 1.0) and (__time_step < 2.0)) then
		-1.31812150
	    else if ((__time_step >= 2.0) and (__time_step < 3.0)) then
		0.708402240
	    else if ((__time_step >= 3.0) and (__time_step < 4.0)) then
		1.60967170
	    else if ((__time_step >= 4.0) and (__time_step < 5.0)) then
		-0.592050710
	    else if ((__time_step >= 5.0) and (__time_step < 6.0)) then
		-1.59936590
	    else if ((__time_step >= 6.0) and (__time_step < 7.0)) then
		1.17200890
	    else if ((__time_step >= 7.0) and (__time_step < 8.0)) then
		-0.126270280
	    else if ((__time_step >= 8.0) and (__time_step < 9.0)) then
		0.749364830
	    else if ((__time_step >= 9.0) and (__time_step < 10.0)) then
		0.732314110
	    else if ((__time_step >= 10.0) and (__time_step < 11.0)) then
		-0.314256460
	    else if ((__time_step >= 11.0) and (__time_step < 12.0)) then
		0.63737010
	    else if ((__time_step >= 12.0) and (__time_step < 13.0)) then
		0.533708520
	    else if ((__time_step >= 13.0) and (__time_step < 14.0)) then
		0.100584040
	    else if ((__time_step >= 14.0) and (__time_step < 15.0)) then
		-1.23487420
	    else if ((__time_step >= 15.0) and (__time_step < 16.0)) then
		0.0476240390
	    else if ((__time_step >= 16.0) and (__time_step < 17.0)) then
		0.993321050
	    else if ((__time_step >= 17.0) and (__time_step < 18.0)) then
		-0.320692330
	    else if ((__time_step >= 18.0) and (__time_step < 19.0)) then
		0.949917680
	    else if ((__time_step >= 19.0) and (__time_step < 20.0)) then
		0.745870940
	    else if ((__time_step >= 20.0) and (__time_step < 21.0)) then
		1.82290410
	    else if ((__time_step >= 21.0) and (__time_step < 22.0)) then
		-0.768374150
	    else if ((__time_step >= 22.0) and (__time_step < 23.0)) then
		-0.630796550
	    else if ((__time_step >= 23.0) and (__time_step < 24.0)) then
		-0.451865710
	    else if ((__time_step >= 24.0) and (__time_step < 25.0)) then
		-1.89529640
	    else if ((__time_step >= 25.0) and (__time_step < 26.0)) then
		0.534185620
	    else if ((__time_step >= 26.0) and (__time_step < 27.0)) then
		0.261004240
	    else if ((__time_step >= 27.0) and (__time_step < 28.0)) then
		-0.537954350
	    else if ((__time_step >= 28.0) and (__time_step < 29.0)) then
		-0.31416520
	    else if ((__time_step >= 29.0) and (__time_step < 30.0)) then
		-0.151198910
	    else if ((__time_step >= 30.0) and (__time_step < 31.0)) then
		-0.74224490
	    else if ((__time_step >= 31.0) and (__time_step < 32.0)) then
		-1.09735320
	    else if ((__time_step >= 32.0) and (__time_step < 33.0)) then
		-1.53625250
	    else if ((__time_step >= 33.0) and (__time_step < 34.0)) then
		-1.46413560
	    else if ((__time_step >= 34.0) and (__time_step < 35.0)) then
		1.78609380
	    else if ((__time_step >= 35.0) and (__time_step < 36.0)) then
		-0.0302681150
	    else if ((__time_step >= 36.0) and (__time_step < 37.0)) then
		0.992854510
	    else if ((__time_step >= 37.0) and (__time_step < 38.0)) then
		-0.756259360
	    else if ((__time_step >= 38.0) and (__time_step < 39.0)) then
		-1.96917890
	    else if ((__time_step >= 39.0) and (__time_step < 40.0)) then
		0.462486680
	    else if ((__time_step >= 40.0) and (__time_step < 41.0)) then
		-0.569706640
	    else if ((__time_step >= 41.0) and (__time_step < 42.0)) then
		0.595316280
	    else if ((__time_step >= 42.0) and (__time_step < 43.0)) then
		1.38390890
	    else if ((__time_step >= 43.0) and (__time_step < 44.0)) then
		-1.59458720
	    else if ((__time_step >= 44.0) and (__time_step < 45.0)) then
		0.353207340
	    else if ((__time_step >= 45.0) and (__time_step < 46.0)) then
		0.329528750
	    else if ((__time_step >= 46.0) and (__time_step < 47.0)) then
		0.0872150430
	    else if ((__time_step >= 47.0) and (__time_step < 48.0)) then
		-0.181600680
	    else if ((__time_step >= 48.0) and (__time_step < 49.0)) then
		1.8668080
	    else if ((__time_step >= 49.0) and (__time_step < 50.0)) then
		-1.27077220
	    else if ((__time_step >= 50.0) and (__time_step < 51.0)) then
		0.237568520
	    else if ((__time_step >= 51.0) and (__time_step < 52.0)) then
		0.505897960
	    else if ((__time_step >= 52.0) and (__time_step < 53.0)) then
		-1.879480
	    else if ((__time_step >= 53.0) and (__time_step < 54.0)) then
		0.569092230
	    else if ((__time_step >= 54.0) and (__time_step < 55.0)) then
		1.35264450
	    else if ((__time_step >= 55.0) and (__time_step < 56.0)) then
		-0.419455930
	    else if ((__time_step >= 56.0) and (__time_step < 57.0)) then
		-0.250631190
	    else if ((__time_step >= 57.0) and (__time_step < 58.0)) then
		-1.66046890
	    else if ((__time_step >= 58.0) and (__time_step < 59.0)) then
		0.32550990
	    else if ((__time_step >= 59.0) and (__time_step < 60.0)) then
		1.48672790
	    else if ((__time_step >= 60.0) and (__time_step < 61.0)) then
		-1.17237170
	    else if ((__time_step >= 61.0) and (__time_step < 62.0)) then
		-1.62155990
	    else if ((__time_step >= 62.0) and (__time_step < 63.0)) then
		-1.24819120
	    else if ((__time_step >= 63.0) and (__time_step < 64.0)) then
		0.671346310
	    else if ((__time_step >= 64.0) and (__time_step < 65.0)) then
		0.929683620
	    else if ((__time_step >= 65.0) and (__time_step < 66.0)) then
		0.52404180
	    else if ((__time_step >= 66.0) and (__time_step < 67.0)) then
		-0.127175380
	    else if ((__time_step >= 67.0) and (__time_step < 68.0)) then
		-0.742550680
	    else if ((__time_step >= 68.0) and (__time_step < 69.0)) then
		0.565866650
	    else if ((__time_step >= 69.0) and (__time_step < 70.0)) then
		0.248107580
	    else if ((__time_step >= 70.0) and (__time_step < 71.0)) then
		0.654906680
	    else if ((__time_step >= 71.0) and (__time_step < 72.0)) then
		-1.50049180
	    else if ((__time_step >= 72.0) and (__time_step < 73.0)) then
		0.69610870
	    else if ((__time_step >= 73.0) and (__time_step < 74.0)) then
		0.721245110
	    else if ((__time_step >= 74.0) and (__time_step < 75.0)) then
		1.72048060
	    else if ((__time_step >= 75.0) and (__time_step < 76.0)) then
		1.31527880
	    else if ((__time_step >= 76.0) and (__time_step < 77.0)) then
		-1.28759860
	    else if ((__time_step >= 77.0) and (__time_step < 78.0)) then
		1.79696250
	    else if ((__time_step >= 78.0) and (__time_step < 79.0)) then
		-1.20150860
	    else if ((__time_step >= 79.0) and (__time_step < 80.0)) then
		-1.12927740
	    else if ((__time_step >= 80.0) and (__time_step < 81.0)) then
		-1.96591230
	    else if ((__time_step >= 81.0) and (__time_step < 82.0)) then
		-0.797493690
	    else if ((__time_step >= 82.0) and (__time_step < 83.0)) then
		-0.902116710
	    else if ((__time_step >= 83.0) and (__time_step < 84.0)) then
		0.34579380
	    else if ((__time_step >= 84.0) and (__time_step < 85.0)) then
		-0.413788610
	    else if ((__time_step >= 85.0) and (__time_step < 86.0)) then
		-1.25438890
	    else if ((__time_step >= 86.0) and (__time_step < 87.0)) then
		-0.428734410
	    else if ((__time_step >= 87.0) and (__time_step < 88.0)) then
		-1.38162460
	    else if ((__time_step >= 88.0) and (__time_step < 89.0)) then
		1.32921780
	    else if ((__time_step >= 89.0) and (__time_step < 90.0)) then
		-1.40099170
	    else if ((__time_step >= 90.0) and (__time_step < 91.0)) then
		0.718183810
	    else if ((__time_step >= 91.0) and (__time_step < 92.0)) then
		1.00035990
	    else if ((__time_step >= 92.0) and (__time_step < 93.0)) then
		-1.940440
	    else if ((__time_step >= 93.0) and (__time_step < 94.0)) then
		-1.4310140
	    else if ((__time_step >= 94.0) and (__time_step < 95.0)) then
		-1.87737760
	    else if ((__time_step >= 95.0) and (__time_step < 96.0)) then
		1.23478210
	    else if ((__time_step >= 96.0) and (__time_step < 97.0)) then
		-1.81141620
	    else if ((__time_step >= 97.0) and (__time_step < 98.0)) then
		0.664725910
	    else if ((__time_step >= 98.0) and (__time_step < 99.0)) then
		-0.175870260
	    else if ((__time_step >= 99.0) and (__time_step < 100.0)) then
		1.21198550
	    else if ((__time_step >= 100.0) and (__time_step < 101.0)) then
		-0.566244380
	    else if ((__time_step >= 101.0) and (__time_step < 102.0)) then
		-1.89866380
	    else if ((__time_step >= 102.0) and (__time_step < 103.0)) then
		-1.12564740
	    else if ((__time_step >= 103.0) and (__time_step < 104.0)) then
		0.84365960
	    else if ((__time_step >= 104.0) and (__time_step < 105.0)) then
		0.195683150
	    else if ((__time_step >= 105.0) and (__time_step < 106.0)) then
		1.47877210
	    else if ((__time_step >= 106.0) and (__time_step < 107.0)) then
		0.955342620
	    else if ((__time_step >= 107.0) and (__time_step < 108.0)) then
		-1.58707950
	    else if ((__time_step >= 108.0) and (__time_step < 109.0)) then
		1.88573290
	    else if ((__time_step >= 109.0) and (__time_step < 110.0)) then
		0.954850430
	    else if ((__time_step >= 110.0) and (__time_step < 111.0)) then
		-1.94456970
	    else if ((__time_step >= 111.0) and (__time_step < 112.0)) then
		0.716486660
	    else if ((__time_step >= 112.0) and (__time_step < 113.0)) then
		-0.0579890760
	    else if ((__time_step >= 113.0) and (__time_step < 114.0)) then
		-1.86112660
	    else if ((__time_step >= 114.0) and (__time_step < 115.0)) then
		-1.54224150
	    else if ((__time_step >= 115.0) and (__time_step < 116.0)) then
		-1.69349960
	    else if ((__time_step >= 116.0) and (__time_step < 117.0)) then
		0.431298710
	    else if ((__time_step >= 117.0) and (__time_step < 118.0)) then
		-1.06613660
	    else if ((__time_step >= 118.0) and (__time_step < 119.0)) then
		-1.43195420
	    else if ((__time_step >= 119.0) and (__time_step < 120.0)) then
		0.120692790
	    else if ((__time_step >= 120.0) and (__time_step < 121.0)) then
		1.72120540
	    else if ((__time_step >= 121.0) and (__time_step < 122.0)) then
		0.467611080
	    else if ((__time_step >= 122.0) and (__time_step < 123.0)) then
		0.759567670
	    else if ((__time_step >= 123.0) and (__time_step < 124.0)) then
		-1.06229650
	    else if ((__time_step >= 124.0) and (__time_step < 125.0)) then
		-1.17262460
	    else if ((__time_step >= 125.0) and (__time_step < 126.0)) then
		-1.85053490
	    else if ((__time_step >= 126.0) and (__time_step < 127.0)) then
		0.653459860
	    else if ((__time_step >= 127.0) and (__time_step < 128.0)) then
		0.0290182830
	    else if ((__time_step >= 128.0) and (__time_step < 129.0)) then
		-0.0567982030
	    else if ((__time_step >= 129.0) and (__time_step < 130.0)) then
		1.446780
	    else if ((__time_step >= 130.0) and (__time_step < 131.0)) then
		1.86205960
	    else if ((__time_step >= 131.0) and (__time_step < 132.0)) then
		1.03875170
	    else if ((__time_step >= 132.0) and (__time_step < 133.0)) then
		-1.01328220
	    else if ((__time_step >= 133.0) and (__time_step < 134.0)) then
		0.705069840
	    else if ((__time_step >= 134.0) and (__time_step < 135.0)) then
		1.03722180
	    else if ((__time_step >= 135.0) and (__time_step < 136.0)) then
		0.344759260
	    else if ((__time_step >= 136.0) and (__time_step < 137.0)) then
		1.28975710
	    else if ((__time_step >= 137.0) and (__time_step < 138.0)) then
		1.70734060
	    else if ((__time_step >= 138.0) and (__time_step < 139.0)) then
		0.550267510
	    else if ((__time_step >= 139.0) and (__time_step < 140.0)) then
		-1.92424850
	    else if ((__time_step >= 140.0) and (__time_step < 141.0)) then
		-1.26263750
	    else if ((__time_step >= 141.0) and (__time_step < 142.0)) then
		-1.89303720
	    else if ((__time_step >= 142.0) and (__time_step < 143.0)) then
		1.73999470
	    else if ((__time_step >= 143.0) and (__time_step < 144.0)) then
		-0.0621305670
	    else if ((__time_step >= 144.0) and (__time_step < 145.0)) then
		1.17914220
	    else if ((__time_step >= 145.0) and (__time_step < 146.0)) then
		-0.172658640
	    else if ((__time_step >= 146.0) and (__time_step < 147.0)) then
		-0.0231629560
	    else if ((__time_step >= 147.0) and (__time_step < 148.0)) then
		-0.297144190
	    else if ((__time_step >= 148.0) and (__time_step < 149.0)) then
		1.56708860
	    else if ((__time_step >= 149.0) and (__time_step < 150.0)) then
		1.49714050
	    else if ((__time_step >= 150.0) and (__time_step < 151.0)) then
		0.532601480
	    else if ((__time_step >= 151.0) and (__time_step < 152.0)) then
		-0.830882750
	    else if ((__time_step >= 152.0) and (__time_step < 153.0)) then
		-0.833286640
	    else if ((__time_step >= 153.0) and (__time_step < 154.0)) then
		-1.01799980
	    else if ((__time_step >= 154.0) and (__time_step < 155.0)) then
		0.817391680
	    else if ((__time_step >= 155.0) and (__time_step < 156.0)) then
		1.09844750
	    else if ((__time_step >= 156.0) and (__time_step < 157.0)) then
		1.29061420
	    else if ((__time_step >= 157.0) and (__time_step < 158.0)) then
		1.22475860
	    else if ((__time_step >= 158.0) and (__time_step < 159.0)) then
		-0.984916190
	    else if ((__time_step >= 159.0) and (__time_step < 160.0)) then
		1.20199940
	    else if ((__time_step >= 160.0) and (__time_step < 161.0)) then
		0.518834890
	    else if ((__time_step >= 161.0) and (__time_step < 162.0)) then
		-1.07399370
	    else if ((__time_step >= 162.0) and (__time_step < 163.0)) then
		-0.475692950
	    else if ((__time_step >= 163.0) and (__time_step < 164.0)) then
		-0.187193440
	    else if ((__time_step >= 164.0) and (__time_step < 165.0)) then
		0.00223823240
	    else if ((__time_step >= 165.0) and (__time_step < 166.0)) then
		0.162286180
	    else if ((__time_step >= 166.0) and (__time_step < 167.0)) then
		-0.619419370
	    else if ((__time_step >= 167.0) and (__time_step < 168.0)) then
		-0.834279890
	    else if ((__time_step >= 168.0) and (__time_step < 169.0)) then
		0.814114360
	    else if ((__time_step >= 169.0) and (__time_step < 170.0)) then
		1.73631370
	    else if ((__time_step >= 170.0) and (__time_step < 171.0)) then
		0.376699030
	    else if ((__time_step >= 171.0) and (__time_step < 172.0)) then
		0.372363090
	    else if ((__time_step >= 172.0) and (__time_step < 173.0)) then
		0.954924140
	    else if ((__time_step >= 173.0) and (__time_step < 174.0)) then
		-0.509427270
	    else if ((__time_step >= 174.0) and (__time_step < 175.0)) then
		-0.18691850
	    else if ((__time_step >= 175.0) and (__time_step < 176.0)) then
		0.0375022580
	    else if ((__time_step >= 176.0) and (__time_step < 177.0)) then
		1.71484330
	    else if ((__time_step >= 177.0) and (__time_step < 178.0)) then
		-0.196848770
	    else if ((__time_step >= 178.0) and (__time_step < 179.0)) then
		0.549739470
	    else if ((__time_step >= 179.0) and (__time_step < 180.0)) then
		-0.162544570
	    else if ((__time_step >= 180.0) and (__time_step < 181.0)) then
		0.215097840
	    else if ((__time_step >= 181.0) and (__time_step < 182.0)) then
		-1.83506940
	    else if ((__time_step >= 182.0) and (__time_step < 183.0)) then
		1.20880870
	    else if ((__time_step >= 183.0) and (__time_step < 184.0)) then
		0.686046540
	    else if ((__time_step >= 184.0) and (__time_step < 185.0)) then
		-1.19868960
	    else if ((__time_step >= 185.0) and (__time_step < 186.0)) then
		-1.94165450
	    else if ((__time_step >= 186.0) and (__time_step < 187.0)) then
		1.05266410
	    else if ((__time_step >= 187.0) and (__time_step < 188.0)) then
		0.270047040
	    else if ((__time_step >= 188.0) and (__time_step < 189.0)) then
		0.61685520
	    else if ((__time_step >= 189.0) and (__time_step < 190.0)) then
		0.538961550
	    else if ((__time_step >= 190.0) and (__time_step < 191.0)) then
		0.93732080
	    else if ((__time_step >= 191.0) and (__time_step < 192.0)) then
		1.54930630
	    else if ((__time_step >= 192.0) and (__time_step < 193.0)) then
		0.663636040
	    else if ((__time_step >= 193.0) and (__time_step < 194.0)) then
		-1.51730160
	    else if ((__time_step >= 194.0) and (__time_step < 195.0)) then
		0.854942370
	    else if ((__time_step >= 195.0) and (__time_step < 196.0)) then
		-0.211091280
	    else if ((__time_step >= 196.0) and (__time_step < 197.0)) then
		0.563929410
	    else if ((__time_step >= 197.0) and (__time_step < 198.0)) then
		0.595584510
	    else if ((__time_step >= 198.0) and (__time_step < 199.0)) then
		0.713501580
	    else -1.76468940;
tel

node  From_newline_Workspace1_11_000(
	__time_step : real;)
returns(
	From_newline_Workspace1_1 : real;);
let
	From_newline_Workspace1_1 = if ((__time_step >= 0.0) and (__time_step < 1.0)) then
		-1.10418690
	    else if ((__time_step >= 1.0) and (__time_step < 2.0)) then
		-1.32807370
	    else if ((__time_step >= 2.0) and (__time_step < 3.0)) then
		1.71411760
	    else if ((__time_step >= 3.0) and (__time_step < 4.0)) then
		0.0609239630
	    else if ((__time_step >= 4.0) and (__time_step < 5.0)) then
		0.693454070
	    else if ((__time_step >= 5.0) and (__time_step < 6.0)) then
		0.67120090
	    else if ((__time_step >= 6.0) and (__time_step < 7.0)) then
		-1.67415430
	    else if ((__time_step >= 7.0) and (__time_step < 8.0)) then
		-1.09970610
	    else if ((__time_step >= 8.0) and (__time_step < 9.0)) then
		-0.863243160
	    else if ((__time_step >= 9.0) and (__time_step < 10.0)) then
		1.65505490
	    else if ((__time_step >= 10.0) and (__time_step < 11.0)) then
		-1.08359370
	    else if ((__time_step >= 11.0) and (__time_step < 12.0)) then
		-1.00551840
	    else if ((__time_step >= 12.0) and (__time_step < 13.0)) then
		0.705163020
	    else if ((__time_step >= 13.0) and (__time_step < 14.0)) then
		0.593962650
	    else if ((__time_step >= 14.0) and (__time_step < 15.0)) then
		0.814707410
	    else if ((__time_step >= 15.0) and (__time_step < 16.0)) then
		1.34841310
	    else if ((__time_step >= 16.0) and (__time_step < 17.0)) then
		0.909182810
	    else if ((__time_step >= 17.0) and (__time_step < 18.0)) then
		-1.92226240
	    else if ((__time_step >= 18.0) and (__time_step < 19.0)) then
		0.334985920
	    else if ((__time_step >= 19.0) and (__time_step < 20.0)) then
		1.68350730
	    else if ((__time_step >= 20.0) and (__time_step < 21.0)) then
		-1.6332880
	    else if ((__time_step >= 21.0) and (__time_step < 22.0)) then
		0.218242440
	    else if ((__time_step >= 22.0) and (__time_step < 23.0)) then
		1.72321120
	    else if ((__time_step >= 23.0) and (__time_step < 24.0)) then
		-1.20218820
	    else if ((__time_step >= 24.0) and (__time_step < 25.0)) then
		0.101278340
	    else if ((__time_step >= 25.0) and (__time_step < 26.0)) then
		-1.49304360
	    else if ((__time_step >= 26.0) and (__time_step < 27.0)) then
		0.994909120
	    else if ((__time_step >= 27.0) and (__time_step < 28.0)) then
		-0.741325230
	    else if ((__time_step >= 28.0) and (__time_step < 29.0)) then
		-1.25130350
	    else if ((__time_step >= 29.0) and (__time_step < 30.0)) then
		1.92158050
	    else if ((__time_step >= 30.0) and (__time_step < 31.0)) then
		0.851308530
	    else if ((__time_step >= 31.0) and (__time_step < 32.0)) then
		1.30260
	    else if ((__time_step >= 32.0) and (__time_step < 33.0)) then
		0.732879280
	    else if ((__time_step >= 33.0) and (__time_step < 34.0)) then
		0.757607210
	    else if ((__time_step >= 34.0) and (__time_step < 35.0)) then
		0.123503530
	    else if ((__time_step >= 35.0) and (__time_step < 36.0)) then
		-1.24458520
	    else if ((__time_step >= 36.0) and (__time_step < 37.0)) then
		-0.0279371730
	    else if ((__time_step >= 37.0) and (__time_step < 38.0)) then
		0.238159470
	    else if ((__time_step >= 38.0) and (__time_step < 39.0)) then
		1.31312110
	    else if ((__time_step >= 39.0) and (__time_step < 40.0)) then
		-1.18852560
	    else if ((__time_step >= 40.0) and (__time_step < 41.0)) then
		0.110984880
	    else if ((__time_step >= 41.0) and (__time_step < 42.0)) then
		1.23124480
	    else if ((__time_step >= 42.0) and (__time_step < 43.0)) then
		-0.579582160
	    else if ((__time_step >= 43.0) and (__time_step < 44.0)) then
		0.191020140
	    else if ((__time_step >= 44.0) and (__time_step < 45.0)) then
		0.869751360
	    else if ((__time_step >= 45.0) and (__time_step < 46.0)) then
		-1.18995050
	    else if ((__time_step >= 46.0) and (__time_step < 47.0)) then
		0.57502760
	    else if ((__time_step >= 47.0) and (__time_step < 48.0)) then
		-1.99964390
	    else if ((__time_step >= 48.0) and (__time_step < 49.0)) then
		0.0527079210
	    else if ((__time_step >= 49.0) and (__time_step < 50.0)) then
		0.279316050
	    else if ((__time_step >= 50.0) and (__time_step < 51.0)) then
		-1.97185320
	    else if ((__time_step >= 51.0) and (__time_step < 52.0)) then
		1.56988980
	    else if ((__time_step >= 52.0) and (__time_step < 53.0)) then
		1.33277440
	    else if ((__time_step >= 53.0) and (__time_step < 54.0)) then
		1.10066180
	    else if ((__time_step >= 54.0) and (__time_step < 55.0)) then
		1.15254250
	    else if ((__time_step >= 55.0) and (__time_step < 56.0)) then
		-0.505481680
	    else if ((__time_step >= 56.0) and (__time_step < 57.0)) then
		-1.39075210
	    else if ((__time_step >= 57.0) and (__time_step < 58.0)) then
		-0.590958790
	    else if ((__time_step >= 58.0) and (__time_step < 59.0)) then
		0.580391690
	    else if ((__time_step >= 59.0) and (__time_step < 60.0)) then
		1.7277470
	    else if ((__time_step >= 60.0) and (__time_step < 61.0)) then
		-1.62671590
	    else if ((__time_step >= 61.0) and (__time_step < 62.0)) then
		0.955111090
	    else if ((__time_step >= 62.0) and (__time_step < 63.0)) then
		-1.77893060
	    else if ((__time_step >= 63.0) and (__time_step < 64.0)) then
		1.02863390
	    else if ((__time_step >= 64.0) and (__time_step < 65.0)) then
		-0.146042580
	    else if ((__time_step >= 65.0) and (__time_step < 66.0)) then
		-1.81998220
	    else if ((__time_step >= 66.0) and (__time_step < 67.0)) then
		1.3681180
	    else if ((__time_step >= 67.0) and (__time_step < 68.0)) then
		-1.34115380
	    else if ((__time_step >= 68.0) and (__time_step < 69.0)) then
		-1.53970430
	    else if ((__time_step >= 69.0) and (__time_step < 70.0)) then
		-0.913756510
	    else if ((__time_step >= 70.0) and (__time_step < 71.0)) then
		-0.742454850
	    else if ((__time_step >= 71.0) and (__time_step < 72.0)) then
		0.424358490
	    else if ((__time_step >= 72.0) and (__time_step < 73.0)) then
		0.709866830
	    else if ((__time_step >= 73.0) and (__time_step < 74.0)) then
		1.9505690
	    else if ((__time_step >= 74.0) and (__time_step < 75.0)) then
		1.9730430
	    else if ((__time_step >= 75.0) and (__time_step < 76.0)) then
		1.03014540
	    else if ((__time_step >= 76.0) and (__time_step < 77.0)) then
		-0.899761570
	    else if ((__time_step >= 77.0) and (__time_step < 78.0)) then
		1.8160550
	    else if ((__time_step >= 78.0) and (__time_step < 79.0)) then
		-0.35567050
	    else if ((__time_step >= 79.0) and (__time_step < 80.0)) then
		-1.13350690
	    else if ((__time_step >= 80.0) and (__time_step < 81.0)) then
		0.516520310
	    else if ((__time_step >= 81.0) and (__time_step < 82.0)) then
		-1.94052390
	    else if ((__time_step >= 82.0) and (__time_step < 83.0)) then
		-1.82680090
	    else if ((__time_step >= 83.0) and (__time_step < 84.0)) then
		-1.27895150
	    else if ((__time_step >= 84.0) and (__time_step < 85.0)) then
		-1.19813960
	    else if ((__time_step >= 85.0) and (__time_step < 86.0)) then
		0.877430250
	    else if ((__time_step >= 86.0) and (__time_step < 87.0)) then
		-0.228529760
	    else if ((__time_step >= 87.0) and (__time_step < 88.0)) then
		1.38197050
	    else if ((__time_step >= 88.0) and (__time_step < 89.0)) then
		-0.440839590
	    else if ((__time_step >= 89.0) and (__time_step < 90.0)) then
		1.35020880
	    else if ((__time_step >= 90.0) and (__time_step < 91.0)) then
		0.993674610
	    else if ((__time_step >= 91.0) and (__time_step < 92.0)) then
		0.335444180
	    else if ((__time_step >= 92.0) and (__time_step < 93.0)) then
		-1.35770560
	    else if ((__time_step >= 93.0) and (__time_step < 94.0)) then
		0.115360740
	    else if ((__time_step >= 94.0) and (__time_step < 95.0)) then
		-0.149316380
	    else if ((__time_step >= 95.0) and (__time_step < 96.0)) then
		-0.481824610
	    else if ((__time_step >= 96.0) and (__time_step < 97.0)) then
		-1.62708010
	    else if ((__time_step >= 97.0) and (__time_step < 98.0)) then
		-0.963418210
	    else if ((__time_step >= 98.0) and (__time_step < 99.0)) then
		-0.656653430
	    else if ((__time_step >= 99.0) and (__time_step < 100.0)) then
		-0.499551150
	    else if ((__time_step >= 100.0) and (__time_step < 101.0)) then
		-1.41496140
	    else if ((__time_step >= 101.0) and (__time_step < 102.0)) then
		-0.732920480
	    else if ((__time_step >= 102.0) and (__time_step < 103.0)) then
		-0.875098380
	    else if ((__time_step >= 103.0) and (__time_step < 104.0)) then
		1.28049450
	    else if ((__time_step >= 104.0) and (__time_step < 105.0)) then
		-0.631641370
	    else if ((__time_step >= 105.0) and (__time_step < 106.0)) then
		1.48800860
	    else if ((__time_step >= 106.0) and (__time_step < 107.0)) then
		-0.927882050
	    else if ((__time_step >= 107.0) and (__time_step < 108.0)) then
		1.10172710
	    else if ((__time_step >= 108.0) and (__time_step < 109.0)) then
		0.436835980
	    else if ((__time_step >= 109.0) and (__time_step < 110.0)) then
		-1.92812460
	    else if ((__time_step >= 110.0) and (__time_step < 111.0)) then
		0.806045790
	    else if ((__time_step >= 111.0) and (__time_step < 112.0)) then
		-1.93699080
	    else if ((__time_step >= 112.0) and (__time_step < 113.0)) then
		0.735572490
	    else if ((__time_step >= 113.0) and (__time_step < 114.0)) then
		1.51160650
	    else if ((__time_step >= 114.0) and (__time_step < 115.0)) then
		-0.272775730
	    else if ((__time_step >= 115.0) and (__time_step < 116.0)) then
		0.525371660
	    else if ((__time_step >= 116.0) and (__time_step < 117.0)) then
		0.344162970
	    else if ((__time_step >= 117.0) and (__time_step < 118.0)) then
		-1.0903550
	    else if ((__time_step >= 118.0) and (__time_step < 119.0)) then
		1.13861870
	    else if ((__time_step >= 119.0) and (__time_step < 120.0)) then
		-0.849454820
	    else if ((__time_step >= 120.0) and (__time_step < 121.0)) then
		1.69750240
	    else if ((__time_step >= 121.0) and (__time_step < 122.0)) then
		-0.806099450
	    else if ((__time_step >= 122.0) and (__time_step < 123.0)) then
		0.145212750
	    else if ((__time_step >= 123.0) and (__time_step < 124.0)) then
		-0.665410070
	    else if ((__time_step >= 124.0) and (__time_step < 125.0)) then
		-1.05082420
	    else if ((__time_step >= 125.0) and (__time_step < 126.0)) then
		0.180956910
	    else if ((__time_step >= 126.0) and (__time_step < 127.0)) then
		-1.56925750
	    else if ((__time_step >= 127.0) and (__time_step < 128.0)) then
		-1.45137870
	    else if ((__time_step >= 128.0) and (__time_step < 129.0)) then
		-1.62229010
	    else if ((__time_step >= 129.0) and (__time_step < 130.0)) then
		-0.756465530
	    else if ((__time_step >= 130.0) and (__time_step < 131.0)) then
		1.25054550
	    else if ((__time_step >= 131.0) and (__time_step < 132.0)) then
		0.054230740
	    else if ((__time_step >= 132.0) and (__time_step < 133.0)) then
		1.46590570
	    else if ((__time_step >= 133.0) and (__time_step < 134.0)) then
		1.92194880
	    else if ((__time_step >= 134.0) and (__time_step < 135.0)) then
		-0.693389430
	    else if ((__time_step >= 135.0) and (__time_step < 136.0)) then
		-1.12153250
	    else if ((__time_step >= 136.0) and (__time_step < 137.0)) then
		0.0728949640
	    else if ((__time_step >= 137.0) and (__time_step < 138.0)) then
		-0.58797660
	    else if ((__time_step >= 138.0) and (__time_step < 139.0)) then
		1.43790860
	    else if ((__time_step >= 139.0) and (__time_step < 140.0)) then
		-0.959917380
	    else if ((__time_step >= 140.0) and (__time_step < 141.0)) then
		1.37488410
	    else if ((__time_step >= 141.0) and (__time_step < 142.0)) then
		0.331206220
	    else if ((__time_step >= 142.0) and (__time_step < 143.0)) then
		0.877622130
	    else if ((__time_step >= 143.0) and (__time_step < 144.0)) then
		-0.625904890
	    else if ((__time_step >= 144.0) and (__time_step < 145.0)) then
		-1.96290430
	    else if ((__time_step >= 145.0) and (__time_step < 146.0)) then
		-1.23021410
	    else if ((__time_step >= 146.0) and (__time_step < 147.0)) then
		0.0295511320
	    else if ((__time_step >= 147.0) and (__time_step < 148.0)) then
		-1.90303260
	    else if ((__time_step >= 148.0) and (__time_step < 149.0)) then
		0.200165760
	    else if ((__time_step >= 149.0) and (__time_step < 150.0)) then
		-0.895263590
	    else if ((__time_step >= 150.0) and (__time_step < 151.0)) then
		0.784964840
	    else if ((__time_step >= 151.0) and (__time_step < 152.0)) then
		1.52541130
	    else if ((__time_step >= 152.0) and (__time_step < 153.0)) then
		-1.90127440
	    else if ((__time_step >= 153.0) and (__time_step < 154.0)) then
		-0.635174160
	    else if ((__time_step >= 154.0) and (__time_step < 155.0)) then
		-0.314377290
	    else if ((__time_step >= 155.0) and (__time_step < 156.0)) then
		-1.67995540
	    else if ((__time_step >= 156.0) and (__time_step < 157.0)) then
		-1.68258480
	    else if ((__time_step >= 157.0) and (__time_step < 158.0)) then
		-1.7104950
	    else if ((__time_step >= 158.0) and (__time_step < 159.0)) then
		1.6013640
	    else if ((__time_step >= 159.0) and (__time_step < 160.0)) then
		1.87723320
	    else if ((__time_step >= 160.0) and (__time_step < 161.0)) then
		-0.434772160
	    else if ((__time_step >= 161.0) and (__time_step < 162.0)) then
		-0.745659580
	    else if ((__time_step >= 162.0) and (__time_step < 163.0)) then
		0.213254320
	    else if ((__time_step >= 163.0) and (__time_step < 164.0)) then
		1.16819220
	    else if ((__time_step >= 164.0) and (__time_step < 165.0)) then
		1.19325630
	    else if ((__time_step >= 165.0) and (__time_step < 166.0)) then
		1.45303420
	    else if ((__time_step >= 166.0) and (__time_step < 167.0)) then
		1.19184880
	    else if ((__time_step >= 167.0) and (__time_step < 168.0)) then
		-1.97449440
	    else if ((__time_step >= 168.0) and (__time_step < 169.0)) then
		1.67960550
	    else if ((__time_step >= 169.0) and (__time_step < 170.0)) then
		-1.9281510
	    else if ((__time_step >= 170.0) and (__time_step < 171.0)) then
		-1.88233410
	    else if ((__time_step >= 171.0) and (__time_step < 172.0)) then
		0.845807670
	    else if ((__time_step >= 172.0) and (__time_step < 173.0)) then
		0.153656750
	    else if ((__time_step >= 173.0) and (__time_step < 174.0)) then
		0.0983543220
	    else if ((__time_step >= 174.0) and (__time_step < 175.0)) then
		0.00895972170
	    else if ((__time_step >= 175.0) and (__time_step < 176.0)) then
		-1.737310
	    else if ((__time_step >= 176.0) and (__time_step < 177.0)) then
		-1.07983750
	    else if ((__time_step >= 177.0) and (__time_step < 178.0)) then
		-1.53183870
	    else if ((__time_step >= 178.0) and (__time_step < 179.0)) then
		1.95908420
	    else if ((__time_step >= 179.0) and (__time_step < 180.0)) then
		-1.7179340
	    else if ((__time_step >= 180.0) and (__time_step < 181.0)) then
		-1.75990540
	    else if ((__time_step >= 181.0) and (__time_step < 182.0)) then
		0.646308410
	    else if ((__time_step >= 182.0) and (__time_step < 183.0)) then
		-0.623768920
	    else if ((__time_step >= 183.0) and (__time_step < 184.0)) then
		-1.48594660
	    else if ((__time_step >= 184.0) and (__time_step < 185.0)) then
		0.548542660
	    else if ((__time_step >= 185.0) and (__time_step < 186.0)) then
		0.985952680
	    else if ((__time_step >= 186.0) and (__time_step < 187.0)) then
		1.22106920
	    else if ((__time_step >= 187.0) and (__time_step < 188.0)) then
		-0.923891470
	    else if ((__time_step >= 188.0) and (__time_step < 189.0)) then
		-0.264080880
	    else if ((__time_step >= 189.0) and (__time_step < 190.0)) then
		-0.392774050
	    else if ((__time_step >= 190.0) and (__time_step < 191.0)) then
		0.432569360
	    else if ((__time_step >= 191.0) and (__time_step < 192.0)) then
		1.08034980
	    else if ((__time_step >= 192.0) and (__time_step < 193.0)) then
		1.76449590
	    else if ((__time_step >= 193.0) and (__time_step < 194.0)) then
		-1.47414080
	    else if ((__time_step >= 194.0) and (__time_step < 195.0)) then
		-0.977109090
	    else if ((__time_step >= 195.0) and (__time_step < 196.0)) then
		-0.486756770
	    else if ((__time_step >= 196.0) and (__time_step < 197.0)) then
		1.97494280
	    else if ((__time_step >= 197.0) and (__time_step < 198.0)) then
		-0.636195020
	    else if ((__time_step >= 198.0) and (__time_step < 199.0)) then
		1.59820840
	    else -1.05007360;
tel

node  From_newline_Workspace2_12_000(
	__time_step : real;)
returns(
	From_newline_Workspace2_1 : real;);
let
	From_newline_Workspace2_1 = if ((__time_step >= 0.0) and (__time_step < 1.0)) then
		-0.135334560
	    else if ((__time_step >= 1.0) and (__time_step < 2.0)) then
		-0.0754380240
	    else if ((__time_step >= 2.0) and (__time_step < 3.0)) then
		-0.078236310
	    else if ((__time_step >= 3.0) and (__time_step < 4.0)) then
		-0.119071060
	    else if ((__time_step >= 4.0) and (__time_step < 5.0)) then
		0.0734137380
	    else if ((__time_step >= 5.0) and (__time_step < 6.0)) then
		-0.0991518460
	    else if ((__time_step >= 6.0) and (__time_step < 7.0)) then
		-0.0487695150
	    else if ((__time_step >= 7.0) and (__time_step < 8.0)) then
		-0.0661632430
	    else if ((__time_step >= 8.0) and (__time_step < 9.0)) then
		-0.0830341820
	    else if ((__time_step >= 9.0) and (__time_step < 10.0)) then
		-0.0860097190
	    else if ((__time_step >= 10.0) and (__time_step < 11.0)) then
		-0.0764236380
	    else if ((__time_step >= 11.0) and (__time_step < 12.0)) then
		-0.101141070
	    else if ((__time_step >= 12.0) and (__time_step < 13.0)) then
		0.0996773170
	    else if ((__time_step >= 13.0) and (__time_step < 14.0)) then
		0.443192440
	    else if ((__time_step >= 14.0) and (__time_step < 15.0)) then
		-0.133209290
	    else if ((__time_step >= 15.0) and (__time_step < 16.0)) then
		-0.132875270
	    else if ((__time_step >= 16.0) and (__time_step < 17.0)) then
		-0.132661410
	    else if ((__time_step >= 17.0) and (__time_step < 18.0)) then
		-0.0627212930
	    else if ((__time_step >= 18.0) and (__time_step < 19.0)) then
		-0.0052786010
	    else if ((__time_step >= 19.0) and (__time_step < 20.0)) then
		-0.0805393630
	    else if ((__time_step >= 20.0) and (__time_step < 21.0)) then
		-0.0124872040
	    else if ((__time_step >= 21.0) and (__time_step < 22.0)) then
		0.191241420
	    else if ((__time_step >= 22.0) and (__time_step < 23.0)) then
		-0.0816278150
	    else if ((__time_step >= 23.0) and (__time_step < 24.0)) then
		-0.12479470
	    else if ((__time_step >= 24.0) and (__time_step < 25.0)) then
		-0.0709365550
	    else if ((__time_step >= 25.0) and (__time_step < 26.0)) then
		-0.122526740
	    else if ((__time_step >= 26.0) and (__time_step < 27.0)) then
		-0.0201239950
	    else if ((__time_step >= 27.0) and (__time_step < 28.0)) then
		0.0695960180
	    else if ((__time_step >= 28.0) and (__time_step < 29.0)) then
		-0.125777540
	    else if ((__time_step >= 29.0) and (__time_step < 30.0)) then
		-0.0661111250
	    else if ((__time_step >= 30.0) and (__time_step < 31.0)) then
		-0.0769758450
	    else if ((__time_step >= 31.0) and (__time_step < 32.0)) then
		-0.104497030
	    else if ((__time_step >= 32.0) and (__time_step < 33.0)) then
		-0.104683560
	    else if ((__time_step >= 33.0) and (__time_step < 34.0)) then
		-0.113415430
	    else if ((__time_step >= 34.0) and (__time_step < 35.0)) then
		-0.0894136070
	    else if ((__time_step >= 35.0) and (__time_step < 36.0)) then
		-0.116727640
	    else if ((__time_step >= 36.0) and (__time_step < 37.0)) then
		0.00501854580
	    else if ((__time_step >= 37.0) and (__time_step < 38.0)) then
		0.19804650
	    else if ((__time_step >= 38.0) and (__time_step < 39.0)) then
		-0.0169842010
	    else if ((__time_step >= 39.0) and (__time_step < 40.0)) then
		-0.12317930
	    else if ((__time_step >= 40.0) and (__time_step < 41.0)) then
		0.473460120
	    else if ((__time_step >= 41.0) and (__time_step < 42.0)) then
		-0.134094890
	    else if ((__time_step >= 42.0) and (__time_step < 43.0)) then
		-0.131719490
	    else if ((__time_step >= 43.0) and (__time_step < 44.0)) then
		-0.119758210
	    else if ((__time_step >= 44.0) and (__time_step < 45.0)) then
		0.0492065190
	    else if ((__time_step >= 45.0) and (__time_step < 46.0)) then
		-0.114206730
	    else if ((__time_step >= 46.0) and (__time_step < 47.0)) then
		0.471823370
	    else if ((__time_step >= 47.0) and (__time_step < 48.0)) then
		-0.0538001460
	    else if ((__time_step >= 48.0) and (__time_step < 49.0)) then
		-0.076049450
	    else if ((__time_step >= 49.0) and (__time_step < 50.0)) then
		-0.127482170
	    else if ((__time_step >= 50.0) and (__time_step < 51.0)) then
		-0.0570027380
	    else if ((__time_step >= 51.0) and (__time_step < 52.0)) then
		-0.113281490
	    else if ((__time_step >= 52.0) and (__time_step < 53.0)) then
		-0.0213204420
	    else if ((__time_step >= 53.0) and (__time_step < 54.0)) then
		-0.115301080
	    else if ((__time_step >= 54.0) and (__time_step < 55.0)) then
		-0.0917379660
	    else if ((__time_step >= 55.0) and (__time_step < 56.0)) then
		0.369305950
	    else if ((__time_step >= 56.0) and (__time_step < 57.0)) then
		-0.135334680
	    else if ((__time_step >= 57.0) and (__time_step < 58.0)) then
		-0.0942868070
	    else if ((__time_step >= 58.0) and (__time_step < 59.0)) then
		0.357842490
	    else if ((__time_step >= 59.0) and (__time_step < 60.0)) then
		-0.0232496720
	    else if ((__time_step >= 60.0) and (__time_step < 61.0)) then
		-0.0541940280
	    else if ((__time_step >= 61.0) and (__time_step < 62.0)) then
		-0.0736182020
	    else if ((__time_step >= 62.0) and (__time_step < 63.0)) then
		-0.0331020670
	    else if ((__time_step >= 63.0) and (__time_step < 64.0)) then
		-0.112533250
	    else if ((__time_step >= 64.0) and (__time_step < 65.0)) then
		0.0471677630
	    else if ((__time_step >= 65.0) and (__time_step < 66.0)) then
		-0.0716133680
	    else if ((__time_step >= 66.0) and (__time_step < 67.0)) then
		-0.134418990
	    else if ((__time_step >= 67.0) and (__time_step < 68.0)) then
		-0.128745870
	    else if ((__time_step >= 68.0) and (__time_step < 69.0)) then
		-0.114676890
	    else if ((__time_step >= 69.0) and (__time_step < 70.0)) then
		0.0422237440
	    else if ((__time_step >= 70.0) and (__time_step < 71.0)) then
		0.00745188470
	    else if ((__time_step >= 71.0) and (__time_step < 72.0)) then
		-0.125833710
	    else if ((__time_step >= 72.0) and (__time_step < 73.0)) then
		0.00428773930
	    else if ((__time_step >= 73.0) and (__time_step < 74.0)) then
		-0.0440041990
	    else if ((__time_step >= 74.0) and (__time_step < 75.0)) then
		-0.00618266450
	    else if ((__time_step >= 75.0) and (__time_step < 76.0)) then
		-0.109887790
	    else if ((__time_step >= 76.0) and (__time_step < 77.0)) then
		-0.124439740
	    else if ((__time_step >= 77.0) and (__time_step < 78.0)) then
		-0.00808729260
	    else if ((__time_step >= 78.0) and (__time_step < 79.0)) then
		-0.118596880
	    else if ((__time_step >= 79.0) and (__time_step < 80.0)) then
		-0.120590840
	    else if ((__time_step >= 80.0) and (__time_step < 81.0)) then
		-0.0502844790
	    else if ((__time_step >= 81.0) and (__time_step < 82.0)) then
		-0.0416949790
	    else if ((__time_step >= 82.0) and (__time_step < 83.0)) then
		-0.0496234880
	    else if ((__time_step >= 83.0) and (__time_step < 84.0)) then
		-0.130557250
	    else if ((__time_step >= 84.0) and (__time_step < 85.0)) then
		-0.121677370
	    else if ((__time_step >= 85.0) and (__time_step < 86.0)) then
		-0.128968130
	    else if ((__time_step >= 86.0) and (__time_step < 87.0)) then
		0.603338050
	    else if ((__time_step >= 87.0) and (__time_step < 88.0)) then
		-0.061887130
	    else if ((__time_step >= 88.0) and (__time_step < 89.0)) then
		-0.135230520
	    else if ((__time_step >= 89.0) and (__time_step < 90.0)) then
		-0.0632100770
	    else if ((__time_step >= 90.0) and (__time_step < 91.0)) then
		-0.111917860
	    else if ((__time_step >= 91.0) and (__time_step < 92.0)) then
		-0.0371993520
	    else if ((__time_step >= 92.0) and (__time_step < 93.0)) then
		-0.0168950920
	    else if ((__time_step >= 93.0) and (__time_step < 94.0)) then
		-0.135092650
	    else if ((__time_step >= 94.0) and (__time_step < 95.0)) then
		-0.0733885150
	    else if ((__time_step >= 95.0) and (__time_step < 96.0)) then
		-0.130622620
	    else if ((__time_step >= 96.0) and (__time_step < 97.0)) then
		-0.0131207620
	    else if ((__time_step >= 97.0) and (__time_step < 98.0)) then
		-0.0940252070
	    else if ((__time_step >= 98.0) and (__time_step < 99.0)) then
		0.338831810
	    else if ((__time_step >= 99.0) and (__time_step < 100.0)) then
		-0.128850150
	    else if ((__time_step >= 100.0) and (__time_step < 101.0)) then
		-0.129634450
	    else if ((__time_step >= 101.0) and (__time_step < 102.0)) then
		-0.0499263480
	    else if ((__time_step >= 102.0) and (__time_step < 103.0)) then
		-0.135263720
	    else if ((__time_step >= 103.0) and (__time_step < 104.0)) then
		-0.128700650
	    else if ((__time_step >= 104.0) and (__time_step < 105.0)) then
		0.363416730
	    else if ((__time_step >= 105.0) and (__time_step < 106.0)) then
		-0.0417153670
	    else if ((__time_step >= 106.0) and (__time_step < 107.0)) then
		-0.13129780
	    else if ((__time_step >= 107.0) and (__time_step < 108.0)) then
		-0.0653915950
	    else if ((__time_step >= 108.0) and (__time_step < 109.0)) then
		-0.064805010
	    else if ((__time_step >= 109.0) and (__time_step < 110.0)) then
		-0.0354250690
	    else if ((__time_step >= 110.0) and (__time_step < 111.0)) then
		-0.0408359880
	    else if ((__time_step >= 111.0) and (__time_step < 112.0)) then
		-0.0458702320
	    else if ((__time_step >= 112.0) and (__time_step < 113.0)) then
		0.264309450
	    else if ((__time_step >= 113.0) and (__time_step < 114.0)) then
		-0.0151331760
	    else if ((__time_step >= 114.0) and (__time_step < 115.0)) then
		-0.125012280
	    else if ((__time_step >= 115.0) and (__time_step < 116.0)) then
		-0.092430030
	    else if ((__time_step >= 116.0) and (__time_step < 117.0)) then
		0.512967310
	    else if ((__time_step >= 117.0) and (__time_step < 118.0)) then
		-0.129546490
	    else if ((__time_step >= 118.0) and (__time_step < 119.0)) then
		-0.0825929620
	    else if ((__time_step >= 119.0) and (__time_step < 120.0)) then
		0.126378020
	    else if ((__time_step >= 120.0) and (__time_step < 121.0)) then
		-0.0140334910
	    else if ((__time_step >= 121.0) and (__time_step < 122.0)) then
		0.0551955090
	    else if ((__time_step >= 122.0) and (__time_step < 123.0)) then
		0.2210410
	    else if ((__time_step >= 123.0) and (__time_step < 124.0)) then
		-0.118696850
	    else if ((__time_step >= 124.0) and (__time_step < 125.0)) then
		-0.123968910
	    else if ((__time_step >= 125.0) and (__time_step < 126.0)) then
		-0.077444610
	    else if ((__time_step >= 126.0) and (__time_step < 127.0)) then
		-0.105059870
	    else if ((__time_step >= 127.0) and (__time_step < 128.0)) then
		-0.13460920
	    else if ((__time_step >= 128.0) and (__time_step < 129.0)) then
		-0.117258190
	    else if ((__time_step >= 129.0) and (__time_step < 130.0)) then
		-0.115863830
	    else if ((__time_step >= 130.0) and (__time_step < 131.0)) then
		-0.0263290230
	    else if ((__time_step >= 131.0) and (__time_step < 132.0)) then
		-0.0277744410
	    else if ((__time_step >= 132.0) and (__time_step < 133.0)) then
		-0.0908717160
	    else if ((__time_step >= 133.0) and (__time_step < 134.0)) then
		-0.048283130
	    else if ((__time_step >= 134.0) and (__time_step < 135.0)) then
		-0.117361760
	    else if ((__time_step >= 135.0) and (__time_step < 136.0)) then
		-0.0950819690
	    else if ((__time_step >= 136.0) and (__time_step < 137.0)) then
		-0.126049990
	    else if ((__time_step >= 137.0) and (__time_step < 138.0)) then
		-0.0867225530
	    else if ((__time_step >= 138.0) and (__time_step < 139.0)) then
		-0.128055610
	    else if ((__time_step >= 139.0) and (__time_step < 140.0)) then
		-0.0355595170
	    else if ((__time_step >= 140.0) and (__time_step < 141.0)) then
		-0.0761946320
	    else if ((__time_step >= 141.0) and (__time_step < 142.0)) then
		-0.0670360470
	    else if ((__time_step >= 142.0) and (__time_step < 143.0)) then
		-0.0627267080
	    else if ((__time_step >= 143.0) and (__time_step < 144.0)) then
		0.406909470
	    else if ((__time_step >= 144.0) and (__time_step < 145.0)) then
		-0.0224152870
	    else if ((__time_step >= 145.0) and (__time_step < 146.0)) then
		-0.116083450
	    else if ((__time_step >= 146.0) and (__time_step < 147.0)) then
		0.99718340
	    else if ((__time_step >= 147.0) and (__time_step < 148.0)) then
		-0.0663412910
	    else if ((__time_step >= 148.0) and (__time_step < 149.0)) then
		-0.123298160
	    else if ((__time_step >= 149.0) and (__time_step < 150.0)) then
		-0.0974375940
	    else if ((__time_step >= 150.0) and (__time_step < 151.0)) then
		0.040731160
	    else if ((__time_step >= 151.0) and (__time_step < 152.0)) then
		-0.0987155690
	    else if ((__time_step >= 152.0) and (__time_step < 153.0)) then
		-0.0444895410
	    else if ((__time_step >= 153.0) and (__time_step < 154.0)) then
		-0.104217670
	    else if ((__time_step >= 154.0) and (__time_step < 155.0)) then
		0.10822780
	    else if ((__time_step >= 155.0) and (__time_step < 156.0)) then
		-0.0538981980
	    else if ((__time_step >= 156.0) and (__time_step < 157.0)) then
		-0.0389710960
	    else if ((__time_step >= 157.0) and (__time_step < 158.0)) then
		-0.0409876730
	    else if ((__time_step >= 158.0) and (__time_step < 159.0)) then
		-0.0739431150
	    else if ((__time_step >= 159.0) and (__time_step < 160.0)) then
		-0.0275889060
	    else if ((__time_step >= 160.0) and (__time_step < 161.0)) then
		0.342629620
	    else if ((__time_step >= 161.0) and (__time_step < 162.0)) then
		-0.128386920
	    else if ((__time_step >= 162.0) and (__time_step < 163.0)) then
		0.554944350
	    else if ((__time_step >= 163.0) and (__time_step < 164.0)) then
		-0.098596530
	    else if ((__time_step >= 164.0) and (__time_step < 165.0)) then
		-0.102058990
	    else if ((__time_step >= 165.0) and (__time_step < 166.0)) then
		-0.134165030
	    else if ((__time_step >= 166.0) and (__time_step < 167.0)) then
		-0.13237570
	    else if ((__time_step >= 167.0) and (__time_step < 168.0)) then
		-0.0363266360
	    else if ((__time_step >= 168.0) and (__time_step < 169.0)) then
		-0.0762266450
	    else if ((__time_step >= 169.0) and (__time_step < 170.0)) then
		-0.00683027180
	    else if ((__time_step >= 170.0) and (__time_step < 171.0)) then
		-0.0673823730
	    else if ((__time_step >= 171.0) and (__time_step < 172.0)) then
		0.0621315750
	    else if ((__time_step >= 172.0) and (__time_step < 173.0)) then
		0.0253130990
	    else if ((__time_step >= 173.0) and (__time_step < 174.0)) then
		0.558337820
	    else if ((__time_step >= 174.0) and (__time_step < 175.0)) then
		0.931773550
	    else if ((__time_step >= 175.0) and (__time_step < 176.0)) then
		-0.098595760
	    else if ((__time_step >= 176.0) and (__time_step < 177.0)) then
		-0.0511412520
	    else if ((__time_step >= 177.0) and (__time_step < 178.0)) then
		-0.127533330
	    else if ((__time_step >= 178.0) and (__time_step < 179.0)) then
		-0.0499901020
	    else if ((__time_step >= 179.0) and (__time_step < 180.0)) then
		-0.10068340
	    else if ((__time_step >= 180.0) and (__time_step < 181.0)) then
		-0.0924508490
	    else if ((__time_step >= 181.0) and (__time_step < 182.0)) then
		-0.0632363140
	    else if ((__time_step >= 182.0) and (__time_step < 183.0)) then
		-0.13365880
	    else if ((__time_step >= 183.0) and (__time_step < 184.0)) then
		-0.115246820
	    else if ((__time_step >= 184.0) and (__time_step < 185.0)) then
		-0.129782130
	    else if ((__time_step >= 185.0) and (__time_step < 186.0)) then
		-0.0326316920
	    else if ((__time_step >= 186.0) and (__time_step < 187.0)) then
		-0.11887730
	    else if ((__time_step >= 187.0) and (__time_step < 188.0)) then
		0.029101010
	    else if ((__time_step >= 188.0) and (__time_step < 189.0)) then
		0.350449390
	    else if ((__time_step >= 189.0) and (__time_step < 190.0)) then
		0.355905640
	    else if ((__time_step >= 190.0) and (__time_step < 191.0)) then
		-0.0226284380
	    else if ((__time_step >= 191.0) and (__time_step < 192.0)) then
		-0.072470850
	    else if ((__time_step >= 192.0) and (__time_step < 193.0)) then
		-0.0730761570
	    else if ((__time_step >= 193.0) and (__time_step < 194.0)) then
		-0.0395726960
	    else if ((__time_step >= 194.0) and (__time_step < 195.0)) then
		-0.127068440
	    else if ((__time_step >= 195.0) and (__time_step < 196.0)) then
		0.542227470
	    else if ((__time_step >= 196.0) and (__time_step < 197.0)) then
		-0.0473813660
	    else if ((__time_step >= 197.0) and (__time_step < 198.0)) then
		0.112550330
	    else if ((__time_step >= 198.0) and (__time_step < 199.0)) then
		-0.0964219410
	    else -0.0474346920;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Gain
*)
node  Gain_395_000(
	u_1 : real; u_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, u_1), 0.9180120) );
	Out1_2 = ( kind2_times(kind2_times(1.0, u_2), 0.8473880) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem
*)
node  IfActionSubsystem_406_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem
*)
node  IfActionSubsystem_406_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_406_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem1
*)
node  IfActionSubsystem1_417_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem1
*)
node  IfActionSubsystem1_417_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_417_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem2
*)
node  IfActionSubsystem2_430_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem2
*)
node  IfActionSubsystem2_430_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_430_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem3
*)
node  IfActionSubsystem3_443_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1/IfActionSubsystem3
*)
node  IfActionSubsystem3_443_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_443_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron1
*)
node  Neuron1_403_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_406_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_417_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_430_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_443_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_406_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_406_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_406_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_417_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_417_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_417_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_430_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_430_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_430_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_443_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_443_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_443_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_406_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_417_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_430_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_443_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem
*)
node  IfActionSubsystem_477_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem
*)
node  IfActionSubsystem_477_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_477_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem1
*)
node  IfActionSubsystem1_488_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem1
*)
node  IfActionSubsystem1_488_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_488_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem2
*)
node  IfActionSubsystem2_501_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem2
*)
node  IfActionSubsystem2_501_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_501_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem3
*)
node  IfActionSubsystem3_514_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10/IfActionSubsystem3
*)
node  IfActionSubsystem3_514_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_514_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron10
*)
node  Neuron10_474_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_477_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_488_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_501_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_514_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_477_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_477_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_477_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_488_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_488_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_488_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_501_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_501_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_501_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_514_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_514_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_514_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_477_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_488_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_501_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_514_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem
*)
node  IfActionSubsystem_548_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem
*)
node  IfActionSubsystem_548_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_548_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem1
*)
node  IfActionSubsystem1_559_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem1
*)
node  IfActionSubsystem1_559_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_559_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem2
*)
node  IfActionSubsystem2_572_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem2
*)
node  IfActionSubsystem2_572_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_572_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem3
*)
node  IfActionSubsystem3_585_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2/IfActionSubsystem3
*)
node  IfActionSubsystem3_585_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_585_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron2
*)
node  Neuron2_545_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_548_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_559_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_572_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_585_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_548_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_548_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_548_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_559_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_559_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_559_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_572_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_572_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_572_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_585_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_585_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_585_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_548_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_559_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_572_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_585_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem
*)
node  IfActionSubsystem_619_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem
*)
node  IfActionSubsystem_619_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_619_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem1
*)
node  IfActionSubsystem1_630_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem1
*)
node  IfActionSubsystem1_630_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_630_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem2
*)
node  IfActionSubsystem2_643_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem2
*)
node  IfActionSubsystem2_643_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_643_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem3
*)
node  IfActionSubsystem3_656_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3/IfActionSubsystem3
*)
node  IfActionSubsystem3_656_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_656_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron3
*)
node  Neuron3_616_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_619_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_630_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_643_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_656_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_619_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_619_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_619_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_630_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_630_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_630_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_643_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_643_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_643_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_656_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_656_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_656_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_619_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_630_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_643_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_656_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem
*)
node  IfActionSubsystem_690_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem
*)
node  IfActionSubsystem_690_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_690_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem1
*)
node  IfActionSubsystem1_701_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem1
*)
node  IfActionSubsystem1_701_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_701_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem2
*)
node  IfActionSubsystem2_714_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem2
*)
node  IfActionSubsystem2_714_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_714_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem3
*)
node  IfActionSubsystem3_727_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4/IfActionSubsystem3
*)
node  IfActionSubsystem3_727_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_727_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron4
*)
node  Neuron4_687_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_690_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_701_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_714_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_727_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_690_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_690_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_690_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_701_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_701_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_701_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_714_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_714_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_714_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_727_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_727_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_727_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_690_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_701_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_714_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_727_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem
*)
node  IfActionSubsystem_761_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem
*)
node  IfActionSubsystem_761_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_761_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem1
*)
node  IfActionSubsystem1_772_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem1
*)
node  IfActionSubsystem1_772_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_772_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem2
*)
node  IfActionSubsystem2_785_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem2
*)
node  IfActionSubsystem2_785_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_785_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem3
*)
node  IfActionSubsystem3_798_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5/IfActionSubsystem3
*)
node  IfActionSubsystem3_798_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_798_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron5
*)
node  Neuron5_758_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_761_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_772_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_785_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_798_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_761_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_761_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_761_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_772_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_772_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_772_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_785_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_785_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_785_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_798_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_798_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_798_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_761_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_772_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_785_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_798_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem
*)
node  IfActionSubsystem_832_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem
*)
node  IfActionSubsystem_832_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_832_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem1
*)
node  IfActionSubsystem1_843_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem1
*)
node  IfActionSubsystem1_843_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_843_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem2
*)
node  IfActionSubsystem2_856_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem2
*)
node  IfActionSubsystem2_856_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_856_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem3
*)
node  IfActionSubsystem3_869_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6/IfActionSubsystem3
*)
node  IfActionSubsystem3_869_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_869_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron6
*)
node  Neuron6_829_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_832_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_843_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_856_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_869_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_832_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_832_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_832_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_843_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_843_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_843_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_856_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_856_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_856_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_869_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_869_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_869_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_832_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_843_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_856_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_869_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem
*)
node  IfActionSubsystem_903_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem
*)
node  IfActionSubsystem_903_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_903_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem1
*)
node  IfActionSubsystem1_914_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem1
*)
node  IfActionSubsystem1_914_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_914_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem2
*)
node  IfActionSubsystem2_927_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem2
*)
node  IfActionSubsystem2_927_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_927_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem3
*)
node  IfActionSubsystem3_940_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7/IfActionSubsystem3
*)
node  IfActionSubsystem3_940_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_940_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron7
*)
node  Neuron7_900_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_903_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_914_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_927_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_940_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_903_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_903_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_903_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_914_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_914_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_914_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_927_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_927_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_927_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_940_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_940_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_940_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_903_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_914_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_927_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_940_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem
*)
node  IfActionSubsystem_974_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem
*)
node  IfActionSubsystem_974_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_974_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem1
*)
node  IfActionSubsystem1_985_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem1
*)
node  IfActionSubsystem1_985_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_985_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem2
*)
node  IfActionSubsystem2_998_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem2
*)
node  IfActionSubsystem2_998_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_998_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem3
*)
node  IfActionSubsystem3_1011_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8/IfActionSubsystem3
*)
node  IfActionSubsystem3_1011_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1011_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron8
*)
node  Neuron8_971_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_974_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_985_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_998_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1011_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_974_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_974_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_974_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_985_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_985_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_985_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_998_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_998_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_998_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1011_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1011_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1011_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_974_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_985_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_998_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1011_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem
*)
node  IfActionSubsystem_1045_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem
*)
node  IfActionSubsystem_1045_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1045_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem1
*)
node  IfActionSubsystem1_1056_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem1
*)
node  IfActionSubsystem1_1056_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1056_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem2
*)
node  IfActionSubsystem2_1069_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem2
*)
node  IfActionSubsystem2_1069_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1069_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem3
*)
node  IfActionSubsystem3_1082_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9/IfActionSubsystem3
*)
node  IfActionSubsystem3_1082_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1082_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1/Neuron9
*)
node  Neuron9_1042_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1045_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1056_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1069_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1082_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1045_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1045_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1045_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1056_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1056_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1056_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1069_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1069_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1069_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1082_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1082_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1082_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1045_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1056_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1069_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1082_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer1
*)
node  Neuron_newline_Layer1_398_000(
	in_1 : real; in_2 : real; in_3 : real; in_4 : real; in_5 : real;
	in_6 : real; in_7 : real; in_8 : real; in_9 : real; in_10 : real;
	bias_1 : real; bias_2 : real; bias_3 : real; bias_4 : real; bias_5 : real;
	bias_6 : real; bias_7 : real; bias_8 : real; bias_9 : real; bias_10 : real;
	__time_step : real; __nb_step : int;)
returns(
	output_newline_layer1_1 : real; output_newline_layer1_2 : real; output_newline_layer1_3 : real; output_newline_layer1_4 : real; output_newline_layer1_5 : real;
	output_newline_layer1_6 : real; output_newline_layer1_7 : real; output_newline_layer1_8 : real; output_newline_layer1_9 : real; output_newline_layer1_10 : real;);
var 
	Neuron1_1 : real; Neuron10_1 : real; Neuron2_1 : real; Neuron3_1 : real; Neuron4_1 : real;
	Neuron5_1 : real; Neuron6_1 : real; Neuron7_1 : real; Neuron8_1 : real; Neuron9_1 : real;
let
	Neuron1_1 = Neuron1_403_000(in_1 + bias_1, __time_step, __nb_step);
	Neuron10_1 = Neuron10_474_000(in_10 + bias_10, __time_step, __nb_step);
	Neuron2_1 = Neuron2_545_000(in_2 + bias_2, __time_step, __nb_step);
	Neuron3_1 = Neuron3_616_000(in_3 + bias_3, __time_step, __nb_step);
	Neuron4_1 = Neuron4_687_000(in_4 + bias_4, __time_step, __nb_step);
	Neuron5_1 = Neuron5_758_000(in_5 + bias_5, __time_step, __nb_step);
	Neuron6_1 = Neuron6_829_000(in_6 + bias_6, __time_step, __nb_step);
	Neuron7_1 = Neuron7_900_000(in_7 + bias_7, __time_step, __nb_step);
	Neuron8_1 = Neuron8_971_000(in_8 + bias_8, __time_step, __nb_step);
	Neuron9_1 = Neuron9_1042_000(in_9 + bias_9, __time_step, __nb_step);
	output_newline_layer1_1 = Neuron1_1;
	output_newline_layer1_2 = Neuron2_1;
	output_newline_layer1_3 = Neuron3_1;
	output_newline_layer1_4 = Neuron4_1;
	output_newline_layer1_5 = Neuron5_1;
	output_newline_layer1_6 = Neuron6_1;
	output_newline_layer1_7 = Neuron7_1;
	output_newline_layer1_8 = Neuron8_1;
	output_newline_layer1_9 = Neuron9_1;
	output_newline_layer1_10 = Neuron10_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem
*)
node  IfActionSubsystem_1147_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem
*)
node  IfActionSubsystem_1147_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1147_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem1
*)
node  IfActionSubsystem1_1158_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem1
*)
node  IfActionSubsystem1_1158_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1158_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem2
*)
node  IfActionSubsystem2_1171_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem2
*)
node  IfActionSubsystem2_1171_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1171_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem3
*)
node  IfActionSubsystem3_1184_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1/IfActionSubsystem3
*)
node  IfActionSubsystem3_1184_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1184_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron1
*)
node  Neuron1_1144_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1147_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1158_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1171_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1184_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1147_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1147_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1147_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1158_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1158_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1158_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1171_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1171_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1171_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1184_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1184_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1184_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1147_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1158_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1171_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1184_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem
*)
node  IfActionSubsystem_1218_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem
*)
node  IfActionSubsystem_1218_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1218_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem1
*)
node  IfActionSubsystem1_1229_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem1
*)
node  IfActionSubsystem1_1229_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1229_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem2
*)
node  IfActionSubsystem2_1242_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem2
*)
node  IfActionSubsystem2_1242_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1242_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem3
*)
node  IfActionSubsystem3_1255_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10/IfActionSubsystem3
*)
node  IfActionSubsystem3_1255_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1255_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron10
*)
node  Neuron10_1215_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1218_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1229_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1242_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1255_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1218_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1218_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1218_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1229_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1229_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1229_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1242_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1242_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1242_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1255_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1255_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1255_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1218_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1229_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1242_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1255_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem
*)
node  IfActionSubsystem_1289_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem
*)
node  IfActionSubsystem_1289_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1289_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem1
*)
node  IfActionSubsystem1_1300_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem1
*)
node  IfActionSubsystem1_1300_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1300_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem2
*)
node  IfActionSubsystem2_1313_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem2
*)
node  IfActionSubsystem2_1313_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1313_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem3
*)
node  IfActionSubsystem3_1326_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2/IfActionSubsystem3
*)
node  IfActionSubsystem3_1326_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1326_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron2
*)
node  Neuron2_1286_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1289_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1300_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1313_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1326_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1289_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1289_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1289_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1300_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1300_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1300_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1313_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1313_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1313_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1326_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1326_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1326_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1289_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1300_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1313_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1326_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem
*)
node  IfActionSubsystem_1360_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem
*)
node  IfActionSubsystem_1360_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1360_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem1
*)
node  IfActionSubsystem1_1371_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem1
*)
node  IfActionSubsystem1_1371_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1371_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem2
*)
node  IfActionSubsystem2_1384_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem2
*)
node  IfActionSubsystem2_1384_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1384_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem3
*)
node  IfActionSubsystem3_1397_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3/IfActionSubsystem3
*)
node  IfActionSubsystem3_1397_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1397_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron3
*)
node  Neuron3_1357_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1360_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1371_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1384_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1397_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1360_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1360_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1360_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1371_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1371_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1371_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1384_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1384_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1384_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1397_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1397_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1397_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1360_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1371_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1384_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1397_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem
*)
node  IfActionSubsystem_1431_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem
*)
node  IfActionSubsystem_1431_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1431_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem1
*)
node  IfActionSubsystem1_1442_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem1
*)
node  IfActionSubsystem1_1442_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1442_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem2
*)
node  IfActionSubsystem2_1455_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem2
*)
node  IfActionSubsystem2_1455_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1455_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem3
*)
node  IfActionSubsystem3_1468_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4/IfActionSubsystem3
*)
node  IfActionSubsystem3_1468_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1468_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron4
*)
node  Neuron4_1428_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1431_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1442_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1455_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1468_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1431_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1431_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1431_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1442_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1442_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1442_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1455_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1455_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1455_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1468_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1468_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1468_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1431_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1442_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1455_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1468_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem
*)
node  IfActionSubsystem_1502_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem
*)
node  IfActionSubsystem_1502_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1502_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem1
*)
node  IfActionSubsystem1_1513_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem1
*)
node  IfActionSubsystem1_1513_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1513_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem2
*)
node  IfActionSubsystem2_1526_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem2
*)
node  IfActionSubsystem2_1526_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1526_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem3
*)
node  IfActionSubsystem3_1539_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5/IfActionSubsystem3
*)
node  IfActionSubsystem3_1539_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1539_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron5
*)
node  Neuron5_1499_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1502_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1513_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1526_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1539_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1502_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1502_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1502_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1513_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1513_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1513_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1526_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1526_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1526_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1539_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1539_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1539_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1502_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1513_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1526_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1539_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem
*)
node  IfActionSubsystem_1573_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem
*)
node  IfActionSubsystem_1573_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1573_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem1
*)
node  IfActionSubsystem1_1584_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem1
*)
node  IfActionSubsystem1_1584_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1584_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem2
*)
node  IfActionSubsystem2_1597_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem2
*)
node  IfActionSubsystem2_1597_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1597_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem3
*)
node  IfActionSubsystem3_1610_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6/IfActionSubsystem3
*)
node  IfActionSubsystem3_1610_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1610_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron6
*)
node  Neuron6_1570_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1573_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1584_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1597_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1610_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1573_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1573_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1573_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1584_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1584_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1584_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1597_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1597_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1597_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1610_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1610_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1610_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1573_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1584_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1597_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1610_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem
*)
node  IfActionSubsystem_1644_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem
*)
node  IfActionSubsystem_1644_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1644_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem1
*)
node  IfActionSubsystem1_1655_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem1
*)
node  IfActionSubsystem1_1655_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1655_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem2
*)
node  IfActionSubsystem2_1668_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem2
*)
node  IfActionSubsystem2_1668_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1668_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem3
*)
node  IfActionSubsystem3_1681_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7/IfActionSubsystem3
*)
node  IfActionSubsystem3_1681_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1681_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron7
*)
node  Neuron7_1641_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1644_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1655_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1668_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1681_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1644_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1644_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1644_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1655_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1655_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1655_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1668_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1668_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1668_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1681_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1681_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1681_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1644_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1655_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1668_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1681_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem
*)
node  IfActionSubsystem_1715_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem
*)
node  IfActionSubsystem_1715_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1715_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem1
*)
node  IfActionSubsystem1_1726_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem1
*)
node  IfActionSubsystem1_1726_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1726_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem2
*)
node  IfActionSubsystem2_1739_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem2
*)
node  IfActionSubsystem2_1739_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1739_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem3
*)
node  IfActionSubsystem3_1752_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8/IfActionSubsystem3
*)
node  IfActionSubsystem3_1752_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1752_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron8
*)
node  Neuron8_1712_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1715_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1726_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1739_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1752_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1715_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1715_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1715_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1726_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1726_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1726_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1739_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1739_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1739_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1752_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1752_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1752_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1715_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1726_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1739_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1752_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem
*)
node  IfActionSubsystem_1786_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) - 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem
*)
node  IfActionSubsystem_1786_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem_1786_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem1
*)
node  IfActionSubsystem1_1797_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem1
*)
node  IfActionSubsystem1_1797_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem1_1797_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem2
*)
node  IfActionSubsystem2_1810_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( kind2_times(kind2_times(1.0, In1_1), ( 0.0 - In1_1 + 2.0 )) );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem2
*)
node  IfActionSubsystem2_1810_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem2_1810_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem3
*)
node  IfActionSubsystem3_1823_000(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = ( ( (kind2_times(In1_1, 0.010)) ) + 0.9900250 );
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9/IfActionSubsystem3
*)
node  IfActionSubsystem3_1823_000_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0;
	Out1_1 = merge(_isEnabled;
		 (activate IfActionSubsystem3_1823_000 every _isEnabled)(In1_1, __time_step, __nb_step); 
		pre_Out1_1 when not(_isEnabled));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2/Neuron9
*)
node  Neuron9_1783_000(
	In3_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	If_1 : bool; If_2 : bool; If_3 : bool; If_4 : bool; ExecutionCond_of_IfActionSubsystem_1786_000 : bool;
	IfActionSubsystem_1 : real; ExecutionCond_of_IfActionSubsystem1_1797_000 : bool; IfActionSubsystem1_1 : real; ExecutionCond_of_IfActionSubsystem2_1810_000 : bool; IfActionSubsystem2_1 : real;
	ExecutionCond_of_IfActionSubsystem3_1823_000 : bool; IfActionSubsystem3_1 : real; Merge_1 : real;
let
	(If_1, If_2, If_3, If_4) = if In3_1 < - 0.9950 then
		(true, false, false, false)
	    else if In3_1 < 0.0 then
		(false, true, false, false)
	    else if In3_1 < 0.9950 then
		(false, false, true, false)
	    else (false, false, false, true);
	ExecutionCond_of_IfActionSubsystem_1786_000 = If_1;
	IfActionSubsystem_1 = IfActionSubsystem_1786_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem_1786_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem1_1797_000 = If_2;
	IfActionSubsystem1_1 = IfActionSubsystem1_1797_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem1_1797_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem2_1810_000 = If_3;
	IfActionSubsystem2_1 = IfActionSubsystem2_1810_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem2_1810_000, __time_step, __nb_step);
	ExecutionCond_of_IfActionSubsystem3_1823_000 = If_4;
	IfActionSubsystem3_1 = IfActionSubsystem3_1823_000_condExecSS(In3_1, ExecutionCond_of_IfActionSubsystem3_1823_000, __time_step, __nb_step);
	Merge_1 = if ExecutionCond_of_IfActionSubsystem_1786_000 then
		IfActionSubsystem_1
	    else if ExecutionCond_of_IfActionSubsystem1_1797_000 then
		IfActionSubsystem1_1
	    else if ExecutionCond_of_IfActionSubsystem2_1810_000 then
		IfActionSubsystem2_1
	    else if ExecutionCond_of_IfActionSubsystem3_1823_000 then
		IfActionSubsystem3_1
	    else (0.0 -> (pre (Merge_1)));
	Out1_1 = Merge_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Neuron_newline_Layer2
*)
node  Neuron_newline_Layer2_1139_000(
	in_1 : real; in_2 : real; in_3 : real; in_4 : real; in_5 : real;
	in_6 : real; in_7 : real; in_8 : real; in_9 : real; in_10 : real;
	bias_1 : real; bias_2 : real; bias_3 : real; bias_4 : real; bias_5 : real;
	bias_6 : real; bias_7 : real; bias_8 : real; bias_9 : real; bias_10 : real;
	__time_step : real; __nb_step : int;)
returns(
	output_newline_layer2_1 : real; output_newline_layer2_2 : real; output_newline_layer2_3 : real; output_newline_layer2_4 : real; output_newline_layer2_5 : real;
	output_newline_layer2_6 : real; output_newline_layer2_7 : real; output_newline_layer2_8 : real; output_newline_layer2_9 : real; output_newline_layer2_10 : real;);
var 
	Neuron1_1 : real; Neuron10_1 : real; Neuron2_1 : real; Neuron3_1 : real; Neuron4_1 : real;
	Neuron5_1 : real; Neuron6_1 : real; Neuron7_1 : real; Neuron8_1 : real; Neuron9_1 : real;
let
	Neuron1_1 = Neuron1_1144_000(in_1 + bias_1, __time_step, __nb_step);
	Neuron10_1 = Neuron10_1215_000(in_10 + bias_10, __time_step, __nb_step);
	Neuron2_1 = Neuron2_1286_000(in_2 + bias_2, __time_step, __nb_step);
	Neuron3_1 = Neuron3_1357_000(in_3 + bias_3, __time_step, __nb_step);
	Neuron4_1 = Neuron4_1428_000(in_4 + bias_4, __time_step, __nb_step);
	Neuron5_1 = Neuron5_1499_000(in_5 + bias_5, __time_step, __nb_step);
	Neuron6_1 = Neuron6_1570_000(in_6 + bias_6, __time_step, __nb_step);
	Neuron7_1 = Neuron7_1641_000(in_7 + bias_7, __time_step, __nb_step);
	Neuron8_1 = Neuron8_1712_000(in_8 + bias_8, __time_step, __nb_step);
	Neuron9_1 = Neuron9_1783_000(in_9 + bias_9, __time_step, __nb_step);
	output_newline_layer2_1 = Neuron1_1;
	output_newline_layer2_2 = Neuron2_1;
	output_newline_layer2_3 = Neuron3_1;
	output_newline_layer2_4 = Neuron4_1;
	output_newline_layer2_5 = Neuron5_1;
	output_newline_layer2_6 = Neuron6_1;
	output_newline_layer2_7 = Neuron7_1;
	output_newline_layer2_8 = Neuron8_1;
	output_newline_layer2_9 = Neuron9_1;
	output_newline_layer2_10 = Neuron10_1;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1/Saturation2
*)
node  Saturation2_1883_000(
	In_1 : real; In_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out_1 : real; Out_2 : real;);
var 
	lower_1 : real; lower_2 : real; upper_1 : real; upper_2 : real;
let
	lower_1 = _max_real(upper_1, -1.9691790);
	lower_2 = _max_real(upper_2, -1.9996440);
	upper_1 = _min_real(1.8857330, In_1);
	upper_2 = _min_real(1.9749430, In_2);
	Out_1 = lower_1;
	Out_2 = lower_2;
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_12B_NNSpec
*)
contract nn_12B_NNSpec_4_000(
	NNSpec_x_1 : real; NNSpec_y_1 : real; __time_step : real; __nb_step : int;)
returns(
	NNSpec_z_1 : real;);
let
	var Arrow_xxNNSpec_20_ni_2_1 : bool = (true -> (pre (false)));
	var From_newline_Workspace_1 : real = From_newline_Workspace_10_000(__time_step);
	var From_newline_Workspace1_1 : real = From_newline_Workspace1_11_000(__time_step);
	var From_newline_Workspace2_1 : real = From_newline_Workspace2_12_000(__time_step);
	var OT_call_1 : bool = OT_call_19_000(200, 0, branch_8_IF_1, __time_step, __nb_step);
	var OT_call1_1 : bool = OT_call1_87_000(200, 0, branch_8_IF_1, __time_step, __nb_step);
	var OT_call11_1 : bool = OT_call11_155_000(200, 0, branch_8_IF_1, __time_step, __nb_step);
	var branch_10_IF_1 : real = if Arrow_xxNNSpec_20_ni_2_1 then
		xxNNSpec_21_rhs_1
	    else ( kind2_divide(kind2_times(1.0, xxNNSpec_25_operator_1), ( From_newline_Workspace1_1 - ( (0.0 -> (pre (From_newline_Workspace1_1))) ) )) );
	var branch_11_IF_1 : real = if ( (xxNNSpec_17_operator_1 > 0.0) ) then
		xxNNSpec_17_operator_1
	    else ( NNSpec_z_1 - From_newline_Workspace2_1 );
	var branch_8_IF_1 : bool = if ( (true -> (pre (false))) ) then
		true
	    else false;
	var branch_9_IF_1 : real = if Arrow_xxNNSpec_20_ni_2_1 then
		xxNNSpec_21_rhs_1
	    else ( kind2_divide(kind2_times(1.0, xxNNSpec_25_operator_1), ( From_newline_Workspace_1 - ( (0.0 -> (pre (From_newline_Workspace_1))) ) )) );
	var guarantee_1 : bool = guarantee_230_000((NNSpec_z_1 <= 1.10), __time_step, __nb_step);
	guarantee "guarantee_230_000" guarantee_1;
	var guarantee1_1 : bool = guarantee1_234_000((NNSpec_z_1 >= -0.20), __time_step, __nb_step);
	guarantee "guarantee1_234_000" guarantee1_1;
	var guarantee11_1 : bool = guarantee11_238_000(spec189_operator_1, __time_step, __nb_step);
	guarantee "guarantee11_238_000" guarantee11_1;
	var guarantee111_1 : bool = guarantee111_242_000(spec207_operator_1, __time_step, __nb_step);
	guarantee "guarantee111_242_000" guarantee111_1;
	var guarantee1111_1 : bool = guarantee1111_246_000(spec225_operator_1, __time_step, __nb_step);
	guarantee "guarantee1111_246_000" guarantee1111_1;
	var spec189_operator_1 : bool = spec189_operator_254_000(OT_call11_1, xxNNSpec_13_operator_1, __time_step, __nb_step);
	var spec207_operator_1 : bool = spec207_operator_255_000(OT_call1_1, ( (branch_10_IF_1 <= 10.0) ) and ( (branch_10_IF_1 >= -35.0) ), __time_step, __nb_step);
	var spec225_operator_1 : bool = spec225_operator_256_000(OT_call_1, ( (branch_9_IF_1 <= 10.0) ) and ( (branch_9_IF_1 >= -35.0) ), __time_step, __nb_step);
	var xxNNSpec_13_operator_1 : bool = xxNNSpec_13_operator_261_000(( (NNSpec_x_1 = From_newline_Workspace_1) ) and ( (NNSpec_y_1 = From_newline_Workspace1_1) ), (branch_11_IF_1 <= 0.010), __time_step, __nb_step);
	var xxNNSpec_17_operator_1 : real = From_newline_Workspace2_1 - NNSpec_z_1;
	var xxNNSpec_21_rhs_1 : real = 0.0;
	var xxNNSpec_25_operator_1 : real = NNSpec_z_1 - ( (0.0 -> (pre (NNSpec_z_1))) );
	assume "NB_STEP" (__nb_step = (0 -> ((pre (__nb_step)) + 1)));
	assume "TIME_STEP" (__time_step = (0.0 -> ((pre (__time_step)) + 1.0)));
tel

(*
Original block name: nn_12B_with_contracts_PP/nn_2x10x10x1
*)
node  nn_2x10x10x1_392_000(
	x_1 : real; y_1 : real; __time_step : real; __nb_step : int;)
returns(
	z_1 : real;);
(*@contract
	import nn_12B_NNSpec_4_000(x_1, y_1, __time_step, __nb_step) returns (z_1);
*)
var 
	Gain_1 : real; Gain_2 : real; Neuron_newline_Layer1_1 : real; Neuron_newline_Layer1_2 : real; Neuron_newline_Layer1_3 : real;
	Neuron_newline_Layer1_4 : real; Neuron_newline_Layer1_5 : real; Neuron_newline_Layer1_6 : real; Neuron_newline_Layer1_7 : real; Neuron_newline_Layer1_8 : real;
	Neuron_newline_Layer1_9 : real; Neuron_newline_Layer1_10 : real; Neuron_newline_Layer2_1 : real; Neuron_newline_Layer2_2 : real; Neuron_newline_Layer2_3 : real;
	Neuron_newline_Layer2_4 : real; Neuron_newline_Layer2_5 : real; Neuron_newline_Layer2_6 : real; Neuron_newline_Layer2_7 : real; Neuron_newline_Layer2_8 : real;
	Neuron_newline_Layer2_9 : real; Neuron_newline_Layer2_10 : real; Saturation2_1 : real; Saturation2_2 : real;
let
	(Gain_1, Gain_2) = Gain_395_000(Saturation2_1 - -0.0149280, Saturation2_2 - -0.080760, __time_step, __nb_step);
	(Neuron_newline_Layer1_1, Neuron_newline_Layer1_2, Neuron_newline_Layer1_3, Neuron_newline_Layer1_4, Neuron_newline_Layer1_5, Neuron_newline_Layer1_6, Neuron_newline_Layer1_7, Neuron_newline_Layer1_8, Neuron_newline_Layer1_9, Neuron_newline_Layer1_10) = Neuron_newline_Layer1_398_000((kind2_times(-0.651010, Gain_1)) + (kind2_times(1.0007850, Gain_2)), (kind2_times(-0.2254030, Gain_1)) + (kind2_times(-1.2508490, Gain_2)), (kind2_times(0.0069280, Gain_1)) + (kind2_times(0.4020830, Gain_2)), (kind2_times(-0.275380, Gain_1)) + (kind2_times(-0.3756930, Gain_2)), (kind2_times(-0.3432960, Gain_1)) + (kind2_times(-0.9637220, Gain_2)), (kind2_times(0.4134880, Gain_1)) + (kind2_times(0.1661380, Gain_2)), (kind2_times(-0.5289890, Gain_1)) + (kind2_times(0.1738750, Gain_2)), (kind2_times(-0.5135750, Gain_1)) + (kind2_times(0.013880, Gain_2)), (kind2_times(0.4375070, Gain_1)) + (kind2_times(-0.0128420, Gain_2)), (kind2_times(-0.5137790, Gain_1)) + (kind2_times(-0.2090690, Gain_2)), -0.5782560, -0.5310490, 0.4495590, 0.3913580, 0.2777070, 0.3726380, -0.1300730, 0.4236620, 0.4142560, -0.3781060, __time_step, __nb_step);
	(Neuron_newline_Layer2_1, Neuron_newline_Layer2_2, Neuron_newline_Layer2_3, Neuron_newline_Layer2_4, Neuron_newline_Layer2_5, Neuron_newline_Layer2_6, Neuron_newline_Layer2_7, Neuron_newline_Layer2_8, Neuron_newline_Layer2_9, Neuron_newline_Layer2_10) = Neuron_newline_Layer2_1139_000((kind2_times(-0.0597980, Neuron_newline_Layer1_1)) + (kind2_times(-0.1284540, Neuron_newline_Layer1_2)) + (kind2_times(-0.1071910, Neuron_newline_Layer1_3)) + (kind2_times(0.7241650, Neuron_newline_Layer1_4)) + (kind2_times(-0.2916390, Neuron_newline_Layer1_5)) + (kind2_times(-0.9297530, Neuron_newline_Layer1_6)) + (kind2_times(-0.3791820, Neuron_newline_Layer1_7)) + (kind2_times(0.9962590, Neuron_newline_Layer1_8)) + (kind2_times(-0.4162130, Neuron_newline_Layer1_9)) + (kind2_times(0.8848650, Neuron_newline_Layer1_10)), (kind2_times(-0.7104160, Neuron_newline_Layer1_1)) + (kind2_times(-0.4214030, Neuron_newline_Layer1_2)) + (kind2_times(-0.1521920, Neuron_newline_Layer1_3)) + (kind2_times(0.2222890, Neuron_newline_Layer1_4)) + (kind2_times(-0.9919960, Neuron_newline_Layer1_5)) + (kind2_times(0.8346350, Neuron_newline_Layer1_6)) + (kind2_times(0.0177480, Neuron_newline_Layer1_7)) + (kind2_times(-0.7454430, Neuron_newline_Layer1_8)) + (kind2_times(0.516990, Neuron_newline_Layer1_9)) + (kind2_times(-0.8101890, Neuron_newline_Layer1_10)), (kind2_times(-0.3695570, Neuron_newline_Layer1_1)) + (kind2_times(-0.6721070, Neuron_newline_Layer1_2)) + (kind2_times(-0.7505260, Neuron_newline_Layer1_3)) + (kind2_times(-0.6677350, Neuron_newline_Layer1_4)) + (kind2_times(0.8773050, Neuron_newline_Layer1_5)) + (kind2_times(0.3370530, Neuron_newline_Layer1_6)) + (kind2_times(0.3936180, Neuron_newline_Layer1_7)) + (kind2_times(-0.7458020, Neuron_newline_Layer1_8)) + (kind2_times(1.2901140, Neuron_newline_Layer1_9)) + (kind2_times(-0.6644390, Neuron_newline_Layer1_10)), (kind2_times(-0.4683550, Neuron_newline_Layer1_1)) + (kind2_times(-0.5908070, Neuron_newline_Layer1_2)) + (kind2_times(-0.1240530, Neuron_newline_Layer1_3)) + (kind2_times(-0.0224740, Neuron_newline_Layer1_4)) + (kind2_times(-0.1339650, Neuron_newline_Layer1_5)) + (kind2_times(-0.4468530, Neuron_newline_Layer1_6)) + (kind2_times(0.3881890, Neuron_newline_Layer1_7)) + (kind2_times(0.8974990, Neuron_newline_Layer1_8)) + (kind2_times(0.6947760, Neuron_newline_Layer1_9)) + (kind2_times(0.7259490, Neuron_newline_Layer1_10)), (kind2_times(0.2632610, Neuron_newline_Layer1_1)) + (kind2_times(0.5085230, Neuron_newline_Layer1_2)) + (kind2_times(0.0431710, Neuron_newline_Layer1_3)) + (kind2_times(0.3482880, Neuron_newline_Layer1_4)) + (kind2_times(-0.6464520, Neuron_newline_Layer1_5)) + (kind2_times(0.7188390, Neuron_newline_Layer1_6)) + (kind2_times(0.1546520, Neuron_newline_Layer1_7)) + (kind2_times(-0.3738780, Neuron_newline_Layer1_8)) + (kind2_times(0.2462310, Neuron_newline_Layer1_9)) + (kind2_times(-1.070950, Neuron_newline_Layer1_10)), (kind2_times(-0.639950, Neuron_newline_Layer1_1)) + (kind2_times(-0.4694030, Neuron_newline_Layer1_2)) + (kind2_times(-0.2285890, Neuron_newline_Layer1_3)) + (kind2_times(0.0355340, Neuron_newline_Layer1_4)) + (kind2_times(0.0995110, Neuron_newline_Layer1_5)) + (kind2_times(0.5137370, Neuron_newline_Layer1_6)) + (kind2_times(0.0438190, Neuron_newline_Layer1_7)) + (kind2_times(-0.7939930, Neuron_newline_Layer1_8)) + (kind2_times(-0.5586740, Neuron_newline_Layer1_9)) + (kind2_times(-0.6961530, Neuron_newline_Layer1_10)), (kind2_times(-1.9220520, Neuron_newline_Layer1_1)) + (kind2_times(-1.2685550, Neuron_newline_Layer1_2)) + (kind2_times(0.4008330, Neuron_newline_Layer1_3)) + (kind2_times(0.0550340, Neuron_newline_Layer1_4)) + (kind2_times(-0.2735680, Neuron_newline_Layer1_5)) + (kind2_times(0.4223050, Neuron_newline_Layer1_6)) + (kind2_times(0.7398580, Neuron_newline_Layer1_7)) + (kind2_times(-0.4302390, Neuron_newline_Layer1_8)) + (kind2_times(-0.4473890, Neuron_newline_Layer1_9)) + (kind2_times(-0.1635360, Neuron_newline_Layer1_10)), (kind2_times(0.3151630, Neuron_newline_Layer1_1)) + (kind2_times(0.3678860, Neuron_newline_Layer1_2)) + (kind2_times(-0.3511760, Neuron_newline_Layer1_3)) + (kind2_times(-0.8151770, Neuron_newline_Layer1_4)) + (kind2_times(0.072180, Neuron_newline_Layer1_5)) + (kind2_times(-0.26170, Neuron_newline_Layer1_6)) + (kind2_times(0.1691680, Neuron_newline_Layer1_7)) + (kind2_times(-0.9512570, Neuron_newline_Layer1_8)) + (kind2_times(-0.2828520, Neuron_newline_Layer1_9)) + (kind2_times(0.278340, Neuron_newline_Layer1_10)), (kind2_times(1.0391070, Neuron_newline_Layer1_1)) + (kind2_times(0.781360, Neuron_newline_Layer1_2)) + (kind2_times(-0.7892450, Neuron_newline_Layer1_3)) + (kind2_times(-1.2964490, Neuron_newline_Layer1_4)) + (kind2_times(0.3777140, Neuron_newline_Layer1_5)) + (kind2_times(0.4843790, Neuron_newline_Layer1_6)) + (kind2_times(-0.8007130, Neuron_newline_Layer1_7)) + (kind2_times(0.1814550, Neuron_newline_Layer1_8)) + (kind2_times(0.8217090, Neuron_newline_Layer1_9)) + (kind2_times(1.0205130, Neuron_newline_Layer1_10)), (kind2_times(-0.027220, Neuron_newline_Layer1_1)) + (kind2_times(0.6036940, Neuron_newline_Layer1_2)) + (kind2_times(-0.1209360, Neuron_newline_Layer1_3)) + (kind2_times(-0.3296060, Neuron_newline_Layer1_4)) + (kind2_times(-0.3222110, Neuron_newline_Layer1_5)) + (kind2_times(0.3875770, Neuron_newline_Layer1_6)) + (kind2_times(-0.7008380, Neuron_newline_Layer1_7)) + (kind2_times(-0.4623430, Neuron_newline_Layer1_8)) + (kind2_times(0.6099310, Neuron_newline_Layer1_9)) + (kind2_times(-0.3842060, Neuron_newline_Layer1_10)), -0.5619380, -0.8122120, -0.5494730, -0.5497970, -1.0802230, 0.6520620, 0.2345810, 1.3061920, 2.0518930, -0.891380, __time_step, __nb_step);
	(Saturation2_1, Saturation2_2) = Saturation2_1883_000(x_1, y_1, __time_step, __nb_step);
	z_1 = ( ( (kind2_times(( ( (kind2_times(-0.4820610, Neuron_newline_Layer2_1)) + (kind2_times(0.7391260, Neuron_newline_Layer2_2)) + (kind2_times(0.8861250, Neuron_newline_Layer2_3)) + (kind2_times(1.8752870, Neuron_newline_Layer2_4)) + (kind2_times(-0.9593980, Neuron_newline_Layer2_5)) + (kind2_times(1.772560, Neuron_newline_Layer2_6)) + (kind2_times(-0.3038010, Neuron_newline_Layer2_7)) + (kind2_times(0.9096940, Neuron_newline_Layer2_8)) + (kind2_times(-0.6810030, Neuron_newline_Layer2_9)) + (kind2_times(-0.9307870, Neuron_newline_Layer2_10)) ) + -0.015750 ), 0.1837660)) ) + -0.014160 );
tel

(*
Original block name: nn_12B_with_contracts_PP
*)
node  nn_12B_with_contracts_PP(
	x_1 : real; y_1 : real;)
returns(
	z_1 : real;);
var 
	nn_2x10x10x1_1 : real; __time_step : real; __nb_step : int;
let
	nn_2x10x10x1_1 = nn_2x10x10x1_392_000(x_1, y_1, __time_step, __nb_step);
	z_1 = nn_2x10x10x1_1;
	__time_step = (0.0 -> ((pre (__time_step)) + 1.0));
	__nb_step = (0 -> ((pre (__nb_step)) + 1));
tel

